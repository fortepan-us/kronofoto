{"version":3,"file":"kronofoto.js","sources":["htmx.js","drag-drop.js","kronofoto-dev.js"],"sourcesContent":["export default function (document2) {\n        'use strict';\n\n        // Public API\n        //** @type {import(\"./htmx\").HtmxApi} */\n        // TODO: list all methods in public API\n        var htmx = {\n            onLoad: onLoadHelper,\n            process: processNode,\n            on: addEventListenerImpl,\n            off: removeEventListenerImpl,\n            trigger : triggerEvent,\n            ajax : ajaxHelper,\n            find : find,\n            findAll : findAll,\n            closest : closest,\n            values : function(elt, type){\n                var inputValues = getInputValues(elt, type || \"post\");\n                return inputValues.values;\n            },\n            remove : removeElement,\n            addClass : addClassToElement,\n            removeClass : removeClassFromElement,\n            toggleClass : toggleClassOnElement,\n            takeClass : takeClassForElement,\n            defineExtension : defineExtension,\n            removeExtension : removeExtension,\n            logAll : logAll,\n            logger : null,\n            config : {\n                historyEnabled:true,\n                historyCacheSize:10,\n                refreshOnHistoryMiss:false,\n                defaultSwapStyle:'innerHTML',\n                defaultSwapDelay:0,\n                defaultSettleDelay:20,\n                includeIndicatorStyles:true,\n                indicatorClass:'htmx-indicator',\n                requestClass:'htmx-request',\n                addedClass:'htmx-added',\n                settlingClass:'htmx-settling',\n                swappingClass:'htmx-swapping',\n                allowEval:true,\n                inlineScriptNonce:'',\n                attributesToSettle:[\"class\", \"style\", \"width\", \"height\"],\n                withCredentials:false,\n                timeout:0,\n                wsReconnectDelay: 'full-jitter',\n                disableSelector: \"[hx-disable], [data-hx-disable]\",\n                useTemplateFragments: false,\n                scrollBehavior: 'smooth',\n                defaultFocusScroll: false,\n            },\n            parseInterval:parseInterval,\n            _:internalEval,\n            createEventSource: function(url){\n                return new EventSource(url, {withCredentials:true})\n            },\n            createWebSocket: function(url){\n                return new WebSocket(url, []);\n            },\n            version: \"1.8.4\"\n        };\n\n        /** @type {import(\"./htmx\").HtmxInternalApi} */\n        var internalAPI = {\n            addTriggerHandler: addTriggerHandler,\n            bodyContains: bodyContains,\n            canAccessLocalStorage: canAccessLocalStorage,\n            filterValues: filterValues,\n            hasAttribute: hasAttribute,\n            getAttributeValue: getAttributeValue,\n            getClosestMatch: getClosestMatch,\n            getExpressionVars: getExpressionVars,\n            getHeaders: getHeaders,\n            getInputValues: getInputValues,\n            getInternalData: getInternalData,\n            getSwapSpecification: getSwapSpecification,\n            getTriggerSpecs: getTriggerSpecs,\n            getTarget: getTarget,\n            makeFragment: makeFragment,\n            mergeObjects: mergeObjects,\n            makeSettleInfo: makeSettleInfo,\n            oobSwap: oobSwap,\n            selectAndSwap: selectAndSwap,\n            settleImmediately: settleImmediately,\n            shouldCancel: shouldCancel,\n            triggerEvent: triggerEvent,\n            triggerErrorEvent: triggerErrorEvent,\n            withExtensions: withExtensions,\n        }\n\n        var VERBS = ['get', 'post', 'put', 'delete', 'patch'];\n        var VERB_SELECTOR = VERBS.map(function(verb){\n            return \"[hx-\" + verb + \"], [data-hx-\" + verb + \"]\"\n        }).join(\", \");\n\n        //====================================================================\n        // Utilities\n        //====================================================================\n\n        function parseInterval(str) {\n            if (str == undefined)  {\n                return undefined\n            }\n            if (str.slice(-2) == \"ms\") {\n                return parseFloat(str.slice(0,-2)) || undefined\n            }\n            if (str.slice(-1) == \"s\") {\n                return (parseFloat(str.slice(0,-1)) * 1000) || undefined\n            }\n            if (str.slice(-1) == \"m\") {\n                return (parseFloat(str.slice(0,-1)) * 1000 * 60) || undefined\n            }\n            return parseFloat(str) || undefined\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {string} name\n         * @returns {(string | null)}\n         */\n        function getRawAttribute(elt, name) {\n            return elt.getAttribute && elt.getAttribute(name);\n        }\n\n        // resolve with both hx and data-hx prefixes\n        function hasAttribute(elt, qualifiedName) {\n            return elt.hasAttribute && (elt.hasAttribute(qualifiedName) ||\n                elt.hasAttribute(\"data-\" + qualifiedName));\n        }\n\n        /**\n         *\n         * @param {HTMLElement} elt\n         * @param {string} qualifiedName\n         * @returns {(string | null)}\n         */\n        function getAttributeValue(elt, qualifiedName) {\n            return getRawAttribute(elt, qualifiedName) || getRawAttribute(elt, \"data-\" + qualifiedName);\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @returns {HTMLElement | null}\n         */\n        function parentElt(elt) {\n            return elt.parentElement;\n        }\n\n        /**\n         * @returns {Document}\n         */\n        function getDocument() {\n            return document;\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {(e:HTMLElement) => boolean} condition\n         * @returns {HTMLElement | null}\n         */\n        function getClosestMatch(elt, condition) {\n            while (elt && !condition(elt)) {\n                elt = parentElt(elt);\n            }\n\n            return elt ? elt : null;\n        }\n\n        function getAttributeValueWithDisinheritance(initialElement, ancestor, attributeName){\n            var attributeValue = getAttributeValue(ancestor, attributeName);\n            var disinherit = getAttributeValue(ancestor, \"hx-disinherit\");\n            if (initialElement !== ancestor && disinherit && (disinherit === \"*\" || disinherit.split(\" \").indexOf(attributeName) >= 0)) {\n                return \"unset\";\n            } else {\n                return attributeValue\n            }\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {string} attributeName\n         * @returns {string | null}\n         */\n        function getClosestAttributeValue(elt, attributeName) {\n            var closestAttr = null;\n            getClosestMatch(elt, function (e) {\n                return closestAttr = getAttributeValueWithDisinheritance(elt, e, attributeName);\n            });\n            if (closestAttr !== \"unset\") {\n                return closestAttr;\n            }\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {string} selector\n         * @returns {boolean}\n         */\n        function matches(elt, selector) {\n            // @ts-ignore: non-standard properties for browser compatability\n            // noinspection JSUnresolvedVariable\n            var matchesFunction = elt.matches || elt.matchesSelector || elt.msMatchesSelector || elt.mozMatchesSelector || elt.webkitMatchesSelector || elt.oMatchesSelector;\n            return matchesFunction && matchesFunction.call(elt, selector);\n        }\n\n        /**\n         * @param {string} str\n         * @returns {string}\n         */\n        function getStartTag(str) {\n            var tagMatcher = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i\n            var match = tagMatcher.exec( str );\n            if (match) {\n                return match[1].toLowerCase();\n            } else {\n                return \"\";\n            }\n        }\n\n        /**\n         *\n         * @param {string} resp\n         * @param {number} depth\n         * @returns {Element}\n         */\n        function parseHTML(resp, depth) {\n            var parser = new DOMParser();\n            var responseDoc = parser.parseFromString(resp, \"text/html\");\n\n            /** @type {Element} */\n            var responseNode = responseDoc.body;\n            while (depth > 0) {\n                depth--;\n                // @ts-ignore\n                responseNode = responseNode.firstChild;\n            }\n            if (responseNode == null) {\n                // @ts-ignore\n                responseNode = getDocument().createDocumentFragment();\n            }\n            return responseNode;\n        }\n\n        /**\n         *\n         * @param {string} resp\n         * @returns {Element}\n         */\n        function makeFragment(resp) {\n            if (htmx.config.useTemplateFragments) {\n                var documentFragment = parseHTML(\"<body><template>\" + resp + \"</template></body>\", 0);\n                // @ts-ignore type mismatch between DocumentFragment and Element.\n                // TODO: Are these close enough for htmx to use interchangably?\n                return documentFragment.querySelector('template').content;\n            } else {\n                var startTag = getStartTag(resp);\n                switch (startTag) {\n                    case \"thead\":\n                    case \"tbody\":\n                    case \"tfoot\":\n                    case \"colgroup\":\n                    case \"caption\":\n                        return parseHTML(\"<table>\" + resp + \"</table>\", 1);\n                    case \"col\":\n                        return parseHTML(\"<table><colgroup>\" + resp + \"</colgroup></table>\", 2);\n                    case \"tr\":\n                        return parseHTML(\"<table><tbody>\" + resp + \"</tbody></table>\", 2);\n                    case \"td\":\n                    case \"th\":\n                        return parseHTML(\"<table><tbody><tr>\" + resp + \"</tr></tbody></table>\", 3);\n                    case \"script\":\n                        return parseHTML(\"<div>\" + resp + \"</div>\", 1);\n                    default:\n                        return parseHTML(resp, 0);\n                }\n            }\n        }\n\n        /**\n         * @param {Function} func\n         */\n        function maybeCall(func){\n            if(func) {\n                func();\n            }\n        }\n\n        /**\n         * @param {any} o\n         * @param {string} type\n         * @returns\n         */\n        function isType(o, type) {\n            return Object.prototype.toString.call(o) === \"[object \" + type + \"]\";\n        }\n\n        /**\n         * @param {*} o\n         * @returns {o is Function}\n         */\n        function isFunction(o) {\n            return isType(o, \"Function\");\n        }\n\n        /**\n         * @param {*} o\n         * @returns {o is Object}\n         */\n        function isRawObject(o) {\n            return isType(o, \"Object\");\n        }\n\n        /**\n         * getInternalData retrieves \"private\" data stored by htmx within an element\n         * @param {HTMLElement} elt\n         * @returns {*}\n         */\n        function getInternalData(elt) {\n            var dataProp = 'htmx-internal-data';\n            var data = elt[dataProp];\n            if (!data) {\n                data = elt[dataProp] = {};\n            }\n            return data;\n        }\n\n        /**\n         * toArray converts an ArrayLike object into a real array.\n         * @param {ArrayLike} arr\n         * @returns {any[]}\n         */\n        function toArray(arr) {\n            var returnArr = [];\n            if (arr) {\n                for (var i = 0; i < arr.length; i++) {\n                    returnArr.push(arr[i]);\n                }\n            }\n            return returnArr\n        }\n\n        function forEach(arr, func) {\n            if (arr) {\n                for (var i = 0; i < arr.length; i++) {\n                    func(arr[i]);\n                }\n            }\n        }\n\n        function isScrolledIntoView(el) {\n            var rect = el.getBoundingClientRect();\n            var elemTop = rect.top;\n            var elemBottom = rect.bottom;\n            return elemTop < window.innerHeight && elemBottom >= 0;\n        }\n\n        function bodyContains(elt) {\n            // IE Fix\n            if (elt.getRootNode && elt.getRootNode() instanceof ShadowRoot) {\n                return getDocument().body.contains(elt.getRootNode().host);\n            } else {\n                return getDocument().body.contains(elt);\n            }\n        }\n\n        function splitOnWhitespace(trigger) {\n            return trigger.trim().split(/\\s+/);\n        }\n\n        /**\n         * mergeObjects takes all of the keys from\n         * obj2 and duplicates them into obj1\n         * @param {Object} obj1\n         * @param {Object} obj2\n         * @returns {Object}\n         */\n        function mergeObjects(obj1, obj2) {\n            for (var key in obj2) {\n                if (obj2.hasOwnProperty(key)) {\n                    obj1[key] = obj2[key];\n                }\n            }\n            return obj1;\n        }\n\n        function parseJSON(jString) {\n            try {\n                return JSON.parse(jString);\n            } catch(error) {\n                logError(error);\n                return null;\n            }\n        }\n\n        function canAccessLocalStorage() {\n            var test = 'htmx:localStorageTest';\n            try {\n                localStorage.setItem(test, test);\n                localStorage.removeItem(test);\n                return true;\n            } catch(e) {\n                return false;\n            }\n        }\n\n        function normalizePath(path) {\n            if (path.match(/^(http:\\/\\/|https:\\/\\/)/)) {\n                var url = new URL(path);\n                if (url) {\n                    path = url.pathname + url.search;\n                }\n            }\n            // remove trailing slash, unless index page\n            if (!path.match('^/$')) {\n                path = path.replace(/\\/+$/, '');\n            }\n            return path;\n        }\n\n        //==========================================================================================\n        // public API\n        //==========================================================================================\n\n        function internalEval(str){\n            return maybeEval(getDocument().body, function () {\n                return eval(str);\n            });\n        }\n\n        function onLoadHelper(callback) {\n            var value = htmx.on(\"htmx:load\", function(evt) {\n                callback(evt.detail.elt);\n            });\n            return value;\n        }\n\n        function logAll(){\n            htmx.logger = function(elt, event, data) {\n                if(console) {\n                    console.log(event, elt, data);\n                }\n            }\n        }\n\n        function find(eltOrSelector, selector) {\n            if (selector) {\n                return eltOrSelector.querySelector(selector);\n            } else {\n                return find(document2, eltOrSelector);\n            }\n        }\n\n        function findAll(eltOrSelector, selector) {\n            if (selector) {\n                return eltOrSelector.querySelectorAll(selector);\n            } else {\n                console.log(eltOrSelector)\n                return findAll(document2, eltOrSelector);\n            }\n        }\n\n        function removeElement(elt, delay) {\n            elt = resolveTarget(elt);\n            if (delay) {\n                setTimeout(function(){removeElement(elt);}, delay)\n            } else {\n                elt.parentElement.removeChild(elt);\n            }\n        }\n\n        function addClassToElement(elt, clazz, delay) {\n            elt = resolveTarget(elt);\n            if (delay) {\n                setTimeout(function(){addClassToElement(elt, clazz);}, delay)\n            } else {\n                elt.classList && elt.classList.add(clazz);\n            }\n        }\n\n        function removeClassFromElement(elt, clazz, delay) {\n            elt = resolveTarget(elt);\n            if (delay) {\n                setTimeout(function(){removeClassFromElement(elt, clazz);}, delay)\n            } else {\n                if (elt.classList) {\n                    elt.classList.remove(clazz);\n                    // if there are no classes left, remove the class attribute\n                    if (elt.classList.length === 0) {\n                        elt.removeAttribute(\"class\");\n                    }\n                }\n            }\n        }\n\n        function toggleClassOnElement(elt, clazz) {\n            elt = resolveTarget(elt);\n            elt.classList.toggle(clazz);\n        }\n\n        function takeClassForElement(elt, clazz) {\n            elt = resolveTarget(elt);\n            forEach(elt.parentElement.children, function(child){\n                removeClassFromElement(child, clazz);\n            })\n            addClassToElement(elt, clazz);\n        }\n\n        function closest(elt, selector) {\n            elt = resolveTarget(elt);\n            if (elt.closest) {\n                return elt.closest(selector);\n            } else {\n                do{\n                    if (elt == null || matches(elt, selector)){\n                        return elt;\n                    }\n                }\n                while (elt = elt && parentElt(elt));\n            }\n        }\n\n        function querySelectorAllExt(elt, selector) {\n            if (selector.indexOf(\"closest \") === 0) {\n                return [closest(elt, selector.substr(8))];\n            } else if (selector.indexOf(\"find \") === 0) {\n                return [find(elt, selector.substr(5))];\n            } else if (selector.indexOf(\"next \") === 0) {\n                return [scanForwardQuery(elt, selector.substr(5))];\n            } else if (selector.indexOf(\"previous \") === 0) {\n                return [scanBackwardsQuery(elt, selector.substr(9))];\n            } else if (selector === 'document') {\n                return [document];\n            } else if (selector === 'window') {\n                return [window];\n            } else {\n                return document2.querySelectorAll(selector);\n            }\n        }\n\n        var scanForwardQuery = function(start, match) {\n            var results = getDocument().querySelectorAll(match);\n            for (var i = 0; i < results.length; i++) {\n                var elt = results[i];\n                if (elt.compareDocumentPosition(start) === Node.DOCUMENT_POSITION_PRECEDING) {\n                    return elt;\n                }\n            }\n        }\n\n        var scanBackwardsQuery = function(start, match) {\n            var results = getDocument().querySelectorAll(match);\n            for (var i = results.length - 1; i >= 0; i--) {\n                var elt = results[i];\n                if (elt.compareDocumentPosition(start) === Node.DOCUMENT_POSITION_FOLLOWING) {\n                    return elt;\n                }\n            }\n        }\n\n        function querySelectorExt(eltOrSelector, selector) {\n            if (selector) {\n                return querySelectorAllExt(eltOrSelector, selector)[0];\n            } else {\n                return querySelectorAllExt(getDocument().body, eltOrSelector)[0];\n            }\n        }\n\n        function resolveTarget(arg2) {\n            if (isType(arg2, 'String')) {\n                return find(arg2);\n            } else {\n                return arg2;\n            }\n        }\n\n        function processEventArgs(arg1, arg2, arg3) {\n            if (isFunction(arg2)) {\n                return {\n                    target: document2.body ? document2.body : document2,\n                    event: arg1,\n                    listener: arg2\n                }\n            } else {\n                return {\n                    target: resolveTarget(arg1),\n                    event: arg2,\n                    listener: arg3\n                }\n            }\n\n        }\n\n        function addEventListenerImpl(arg1, arg2, arg3) {\n            ready(function(){\n                var eventArgs = processEventArgs(arg1, arg2, arg3);\n                eventArgs.target.addEventListener(eventArgs.event, eventArgs.listener);\n            })\n            var b = isFunction(arg2);\n            return b ? arg2 : arg3;\n        }\n\n        function removeEventListenerImpl(arg1, arg2, arg3) {\n            ready(function(){\n                var eventArgs = processEventArgs(arg1, arg2, arg3);\n                eventArgs.target.removeEventListener(eventArgs.event, eventArgs.listener);\n            })\n            return isFunction(arg2) ? arg2 : arg3;\n        }\n\n        //====================================================================\n        // Node processing\n        //====================================================================\n\n        var DUMMY_ELT = getDocument().createElement(\"output\"); // dummy element for bad selectors\n        function findAttributeTargets(elt, attrName) {\n            var attrTarget = getClosestAttributeValue(elt, attrName);\n            if (attrTarget) {\n                if (attrTarget === \"this\") {\n                    return [findThisElement(elt, attrName)];\n                } else {\n                    var result = querySelectorAllExt(elt, attrTarget);\n                    if (result.length === 0) {\n                        logError('The selector \"' + attrTarget + '\" on ' + attrName + \" returned no matches!\");\n                        return [DUMMY_ELT]\n                    } else {\n                        return result;\n                    }\n                }\n            }\n        }\n\n        function findThisElement(elt, attribute){\n            return getClosestMatch(elt, function (elt) {\n                return getAttributeValue(elt, attribute) != null;\n            })\n        }\n\n        function getTarget(elt) {\n            var targetStr = getClosestAttributeValue(elt, \"hx-target\");\n            if (targetStr) {\n                if (targetStr === \"this\") {\n                    return findThisElement(elt,'hx-target');\n                } else {\n                    return querySelectorExt(elt, targetStr)\n                }\n            } else {\n                var data = getInternalData(elt);\n                if (data.boosted) {\n                    return getDocument().body;\n                } else {\n                    return elt;\n                }\n            }\n        }\n\n        function shouldSettleAttribute(name) {\n            var attributesToSettle = htmx.config.attributesToSettle;\n            for (var i = 0; i < attributesToSettle.length; i++) {\n                if (name === attributesToSettle[i]) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function cloneAttributes(mergeTo, mergeFrom) {\n            forEach(mergeTo.attributes, function (attr) {\n                if (!mergeFrom.hasAttribute(attr.name) && shouldSettleAttribute(attr.name)) {\n                    mergeTo.removeAttribute(attr.name)\n                }\n            });\n            forEach(mergeFrom.attributes, function (attr) {\n                if (shouldSettleAttribute(attr.name)) {\n                    mergeTo.setAttribute(attr.name, attr.value);\n                }\n            });\n        }\n\n        function isInlineSwap(swapStyle, target) {\n            var extensions = getExtensions(target);\n            for (var i = 0; i < extensions.length; i++) {\n                var extension = extensions[i];\n                try {\n                    if (extension.isInlineSwap(swapStyle)) {\n                        return true;\n                    }\n                } catch(e) {\n                    logError(e);\n                }\n            }\n            return swapStyle === \"outerHTML\";\n        }\n\n        /**\n         *\n         * @param {string} oobValue\n         * @param {HTMLElement} oobElement\n         * @param {*} settleInfo\n         * @returns\n         */\n        function oobSwap(oobValue, oobElement, settleInfo) {\n            var selector = \"#\" + oobElement.id;\n            var swapStyle = \"outerHTML\";\n            if (oobValue === \"true\") {\n                // do nothing\n            } else if (oobValue.indexOf(\":\") > 0) {\n                swapStyle = oobValue.substr(0, oobValue.indexOf(\":\"));\n                selector  = oobValue.substr(oobValue.indexOf(\":\") + 1, oobValue.length);\n            } else {\n                swapStyle = oobValue;\n            }\n\n            var targets = document2.querySelectorAll(selector);\n            if (targets) {\n                forEach(\n                    targets,\n                    function (target) {\n                        var fragment;\n                        var oobElementClone = oobElement.cloneNode(true);\n                        fragment = getDocument().createDocumentFragment();\n                        fragment.appendChild(oobElementClone);\n                        if (!isInlineSwap(swapStyle, target)) {\n                            fragment = oobElementClone; // if this is not an inline swap, we use the content of the node, not the node itself\n                        }\n\n                        var beforeSwapDetails = {shouldSwap: true, target: target, fragment:fragment };\n                        if (!triggerEvent(target, 'htmx:oobBeforeSwap', beforeSwapDetails)) return;\n\n                        target = beforeSwapDetails.target; // allow re-targeting\n                        if (beforeSwapDetails['shouldSwap']){\n                            swap(swapStyle, target, target, fragment, settleInfo);\n                        }\n                        forEach(settleInfo.elts, function (elt) {\n                            triggerEvent(elt, 'htmx:oobAfterSwap', beforeSwapDetails);\n                        });\n                    }\n                );\n                oobElement.parentNode.removeChild(oobElement);\n            } else {\n                oobElement.parentNode.removeChild(oobElement);\n                triggerErrorEvent(getDocument().body, \"htmx:oobErrorNoTarget\", {content: oobElement});\n            }\n            return oobValue;\n        }\n\n        function handleOutOfBandSwaps(elt, fragment, settleInfo) {\n            var oobSelects = getClosestAttributeValue(elt, \"hx-select-oob\");\n            if (oobSelects) {\n                var oobSelectValues = oobSelects.split(\",\");\n                for (let i = 0; i < oobSelectValues.length; i++) {\n                    var oobSelectValue = oobSelectValues[i].split(\":\", 2);\n                    var id = oobSelectValue[0];\n                    if (id.indexOf(\"#\") === 0) {\n                        id = id.substring(1);\n                    }\n                    var oobValue = oobSelectValue[1] || \"true\";\n                    var oobElement = fragment.querySelector(\"#\" + id);\n                    if (oobElement) {\n                        oobSwap(oobValue, oobElement, settleInfo);\n                    }\n                }\n            }\n            forEach(findAll(fragment, '[hx-swap-oob], [data-hx-swap-oob]'), function (oobElement) {\n                var oobValue = getAttributeValue(oobElement, \"hx-swap-oob\");\n                if (oobValue != null) {\n                    oobSwap(oobValue, oobElement, settleInfo);\n                }\n            });\n        }\n\n        function handlePreservedElements(fragment) {\n            forEach(findAll(fragment, '[hx-preserve], [data-hx-preserve]'), function (preservedElt) {\n                var id = getAttributeValue(preservedElt, \"id\");\n                var oldElt = document2.getElementById(id);\n                if (oldElt != null) {\n                    preservedElt.parentNode.replaceChild(oldElt, preservedElt);\n                }\n            });\n        }\n\n        function handleAttributes(parentNode, fragment, settleInfo) {\n            forEach(fragment.querySelectorAll(\"[id]\"), function (newNode) {\n                if (newNode.id && newNode.id.length > 0) {\n                    var oldNode = parentNode.querySelector(newNode.tagName + \"[id='\" + newNode.id + \"']\");\n                    if (oldNode && oldNode !== parentNode) {\n                        var newAttributes = newNode.cloneNode();\n                        cloneAttributes(newNode, oldNode);\n                        settleInfo.tasks.push(function () {\n                            cloneAttributes(newNode, newAttributes);\n                        });\n                    }\n                }\n            });\n        }\n\n        function makeAjaxLoadTask(child) {\n            return function () {\n                removeClassFromElement(child, htmx.config.addedClass);\n                processNode(child);\n                processScripts(child);\n                processFocus(child)\n                triggerEvent(child, 'htmx:load');\n            };\n        }\n\n        function processFocus(child) {\n            var autofocus = \"[autofocus]\";\n            var autoFocusedElt = matches(child, autofocus) ? child : child.querySelector(autofocus)\n            if (autoFocusedElt != null) {\n                autoFocusedElt.focus();\n            }\n        }\n\n        function insertNodesBefore(parentNode, insertBefore, fragment, settleInfo) {\n            handleAttributes(parentNode, fragment, settleInfo);\n            while(fragment.childNodes.length > 0){\n                var child = fragment.firstChild;\n                addClassToElement(child, htmx.config.addedClass);\n                parentNode.insertBefore(child, insertBefore);\n                if (child.nodeType !== Node.TEXT_NODE && child.nodeType !== Node.COMMENT_NODE) {\n                    settleInfo.tasks.push(makeAjaxLoadTask(child));\n                }\n            }\n        }\n\n        // based on https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0,\n        // derived from Java's string hashcode implementation\n        function stringHash(string, hash) {\n            var char = 0;\n            while (char < string.length){\n                hash = (hash << 5) - hash + string.charCodeAt(char++) | 0; // bitwise or ensures we have a 32-bit int\n            }\n            return hash;\n        }\n\n        function attributeHash(elt) {\n            var hash = 0;\n            for (var i = 0; i < elt.attributes.length; i++) {\n                var attribute = elt.attributes[i];\n                if(attribute.value){ // only include attributes w/ actual values (empty is same as non-existent)\n                    hash = stringHash(attribute.name, hash);\n                    hash = stringHash(attribute.value, hash);\n                }\n            }\n            return hash;\n        }\n\n        function deInitNode(element) {\n            var internalData = getInternalData(element);\n            if (internalData.webSocket) {\n                internalData.webSocket.close();\n            }\n            if (internalData.sseEventSource) {\n                internalData.sseEventSource.close();\n            }\n            if (internalData.listenerInfos) {\n                forEach(internalData.listenerInfos, function (info) {\n                    if (info.on) {\n                        info.on.removeEventListener(info.trigger, info.listener);\n                    }\n                });\n            }\n        }\n\n        function cleanUpElement(element) {\n            triggerEvent(element, \"htmx:beforeCleanupElement\")\n            deInitNode(element);\n            if (element.children) { // IE\n                forEach(element.children, function(child) { cleanUpElement(child) });\n            }\n        }\n\n        function swapOuterHTML(target, fragment, settleInfo) {\n            if (target.tagName === \"BODY\") {\n                return swapInnerHTML(target, fragment, settleInfo);\n            } else {\n                // @type {HTMLElement}\n                var newElt\n                var eltBeforeNewContent = target.previousSibling;\n                insertNodesBefore(parentElt(target), target, fragment, settleInfo);\n                if (eltBeforeNewContent == null) {\n                    newElt = parentElt(target).firstChild;\n                } else {\n                    newElt = eltBeforeNewContent.nextSibling;\n                }\n                getInternalData(target).replacedWith = newElt; // tuck away so we can fire events on it later\n                settleInfo.elts = [] // clear existing elements\n                while(newElt && newElt !== target) {\n                    if (newElt.nodeType === Node.ELEMENT_NODE) {\n                        settleInfo.elts.push(newElt);\n                    }\n                    newElt = newElt.nextElementSibling;\n                }\n                cleanUpElement(target);\n                parentElt(target).removeChild(target);\n            }\n        }\n\n        function swapAfterBegin(target, fragment, settleInfo) {\n            return insertNodesBefore(target, target.firstChild, fragment, settleInfo);\n        }\n\n        function swapBeforeBegin(target, fragment, settleInfo) {\n            return insertNodesBefore(parentElt(target), target, fragment, settleInfo);\n        }\n\n        function swapBeforeEnd(target, fragment, settleInfo) {\n            return insertNodesBefore(target, null, fragment, settleInfo);\n        }\n\n        function swapAfterEnd(target, fragment, settleInfo) {\n            return insertNodesBefore(parentElt(target), target.nextSibling, fragment, settleInfo);\n        }\n        function swapDelete(target, fragment, settleInfo) {\n            cleanUpElement(target);\n            return parentElt(target).removeChild(target);\n        }\n\n        function swapInnerHTML(target, fragment, settleInfo) {\n            var firstChild = target.firstChild;\n            insertNodesBefore(target, firstChild, fragment, settleInfo);\n            if (firstChild) {\n                while (firstChild.nextSibling) {\n                    cleanUpElement(firstChild.nextSibling)\n                    target.removeChild(firstChild.nextSibling);\n                }\n                cleanUpElement(firstChild)\n                target.removeChild(firstChild);\n            }\n        }\n\n        function maybeSelectFromResponse(elt, fragment) {\n            var selector = getClosestAttributeValue(elt, \"hx-select\");\n            if (selector) {\n                var newFragment = getDocument().createDocumentFragment();\n                forEach(fragment.querySelectorAll(selector), function (node) {\n                    newFragment.appendChild(node);\n                });\n                fragment = newFragment;\n            }\n            return fragment;\n        }\n\n        function swap(swapStyle, elt, target, fragment, settleInfo) {\n            switch (swapStyle) {\n                case \"none\":\n                    return;\n                case \"outerHTML\":\n                    swapOuterHTML(target, fragment, settleInfo);\n                    return;\n                case \"afterbegin\":\n                    swapAfterBegin(target, fragment, settleInfo);\n                    return;\n                case \"beforebegin\":\n                    swapBeforeBegin(target, fragment, settleInfo);\n                    return;\n                case \"beforeend\":\n                    swapBeforeEnd(target, fragment, settleInfo);\n                    return;\n                case \"afterend\":\n                    swapAfterEnd(target, fragment, settleInfo);\n                    return;\n                case \"delete\":\n                    swapDelete(target, fragment, settleInfo);\n                    return;\n                default:\n                    var extensions = getExtensions(elt);\n                    for (var i = 0; i < extensions.length; i++) {\n                        var ext = extensions[i];\n                        try {\n                            var newElements = ext.handleSwap(swapStyle, target, fragment, settleInfo);\n                            if (newElements) {\n                                if (typeof newElements.length !== 'undefined') {\n                                    // if handleSwap returns an array (like) of elements, we handle them\n                                    for (var j = 0; j < newElements.length; j++) {\n                                        var child = newElements[j];\n                                        if (child.nodeType !== Node.TEXT_NODE && child.nodeType !== Node.COMMENT_NODE) {\n                                            settleInfo.tasks.push(makeAjaxLoadTask(child));\n                                        }\n                                    }\n                                }\n                                return;\n                            }\n                        } catch (e) {\n                            logError(e);\n                        }\n                    }\n                    if (swapStyle === \"innerHTML\") {\n                        swapInnerHTML(target, fragment, settleInfo);\n                    } else {\n                        swap(htmx.config.defaultSwapStyle, elt, target, fragment, settleInfo);\n                    }\n            }\n        }\n\n        function findTitle(content) {\n            if (content.indexOf('<title') > -1) {\n                var contentWithSvgsRemoved = content.replace(/<svg(\\s[^>]*>|>)([\\s\\S]*?)<\\/svg>/gim, '');\n                var result = contentWithSvgsRemoved.match(/<title(\\s[^>]*>|>)([\\s\\S]*?)<\\/title>/im);\n\n                if (result) {\n                    return result[2];\n                }\n            }\n        }\n\n        function selectAndSwap(swapStyle, target, elt, responseText, settleInfo) {\n            settleInfo.title = findTitle(responseText);\n            var fragment = makeFragment(responseText);\n            if (fragment) {\n                handleOutOfBandSwaps(elt, fragment, settleInfo);\n                fragment = maybeSelectFromResponse(elt, fragment);\n                handlePreservedElements(fragment);\n                return swap(swapStyle, elt, target, fragment, settleInfo);\n            }\n        }\n\n        function handleTrigger(xhr, header, elt) {\n            var triggerBody = xhr.getResponseHeader(header);\n            if (triggerBody.indexOf(\"{\") === 0) {\n                var triggers = parseJSON(triggerBody);\n                for (var eventName in triggers) {\n                    if (triggers.hasOwnProperty(eventName)) {\n                        var detail = triggers[eventName];\n                        if (!isRawObject(detail)) {\n                            detail = {\"value\": detail}\n                        }\n                        triggerEvent(elt, eventName, detail);\n                    }\n                }\n            } else {\n                triggerEvent(elt, triggerBody, []);\n            }\n        }\n\n        var WHITESPACE = /\\s/;\n        var WHITESPACE_OR_COMMA = /[\\s,]/;\n        var SYMBOL_START = /[_$a-zA-Z]/;\n        var SYMBOL_CONT = /[_$a-zA-Z0-9]/;\n        var STRINGISH_START = ['\"', \"'\", \"/\"];\n        var NOT_WHITESPACE = /[^\\s]/;\n        function tokenizeString(str) {\n            var tokens = [];\n            var position = 0;\n            while (position < str.length) {\n                if(SYMBOL_START.exec(str.charAt(position))) {\n                    var startPosition = position;\n                    while (SYMBOL_CONT.exec(str.charAt(position + 1))) {\n                        position++;\n                    }\n                    tokens.push(str.substr(startPosition, position - startPosition + 1));\n                } else if (STRINGISH_START.indexOf(str.charAt(position)) !== -1) {\n                    var startChar = str.charAt(position);\n                    var startPosition = position;\n                    position++;\n                    while (position < str.length && str.charAt(position) !== startChar ) {\n                        if (str.charAt(position) === \"\\\\\") {\n                            position++;\n                        }\n                        position++;\n                    }\n                    tokens.push(str.substr(startPosition, position - startPosition + 1));\n                } else {\n                    var symbol = str.charAt(position);\n                    tokens.push(symbol);\n                }\n                position++;\n            }\n            return tokens;\n        }\n\n        function isPossibleRelativeReference(token, last, paramName) {\n            return SYMBOL_START.exec(token.charAt(0)) &&\n                token !== \"true\" &&\n                token !== \"false\" &&\n                token !== \"this\" &&\n                token !== paramName &&\n                last !== \".\";\n        }\n\n        function maybeGenerateConditional(elt, tokens, paramName) {\n            if (tokens[0] === '[') {\n                tokens.shift();\n                var bracketCount = 1;\n                var conditionalSource = \" return (function(\" + paramName + \"){ return (\";\n                var last = null;\n                while (tokens.length > 0) {\n                    var token = tokens[0];\n                    if (token === \"]\") {\n                        bracketCount--;\n                        if (bracketCount === 0) {\n                            if (last === null) {\n                                conditionalSource = conditionalSource + \"true\";\n                            }\n                            tokens.shift();\n                            conditionalSource += \")})\";\n                            try {\n                                var conditionFunction = maybeEval(elt,function () {\n                                    return Function(conditionalSource)();\n                                    },\n                                    function(){return true})\n                                conditionFunction.source = conditionalSource;\n                                return conditionFunction;\n                            } catch (e) {\n                                triggerErrorEvent(getDocument().body, \"htmx:syntax:error\", {error:e, source:conditionalSource})\n                                return null;\n                            }\n                        }\n                    } else if (token === \"[\") {\n                        bracketCount++;\n                    }\n                    if (isPossibleRelativeReference(token, last, paramName)) {\n                            conditionalSource += \"((\" + paramName + \".\" + token + \") ? (\" + paramName + \".\" + token + \") : (window.\" + token + \"))\";\n                    } else {\n                        conditionalSource = conditionalSource + token;\n                    }\n                    last = tokens.shift();\n                }\n            }\n        }\n\n        function consumeUntil(tokens, match) {\n            var result = \"\";\n            while (tokens.length > 0 && !tokens[0].match(match)) {\n                result += tokens.shift();\n            }\n            return result;\n        }\n\n        var INPUT_SELECTOR = 'input, textarea, select';\n\n        /**\n         * @param {HTMLElement} elt\n         * @returns {import(\"./htmx\").HtmxTriggerSpecification[]}\n         */\n        function getTriggerSpecs(elt) {\n            var explicitTrigger = getAttributeValue(elt, 'hx-trigger');\n            var triggerSpecs = [];\n            if (explicitTrigger) {\n                var tokens = tokenizeString(explicitTrigger);\n                do {\n                    consumeUntil(tokens, NOT_WHITESPACE);\n                    var initialLength = tokens.length;\n                    var trigger = consumeUntil(tokens, /[,\\[\\s]/);\n                    if (trigger !== \"\") {\n                        if (trigger === \"every\") {\n                            var every = {trigger: 'every'};\n                            consumeUntil(tokens, NOT_WHITESPACE);\n                            every.pollInterval = parseInterval(consumeUntil(tokens, /[,\\[\\s]/));\n                            consumeUntil(tokens, NOT_WHITESPACE);\n                            var eventFilter = maybeGenerateConditional(elt, tokens, \"event\");\n                            if (eventFilter) {\n                                every.eventFilter = eventFilter;\n                            }\n                            triggerSpecs.push(every);\n                        } else if (trigger.indexOf(\"sse:\") === 0) {\n                            triggerSpecs.push({trigger: 'sse', sseEvent: trigger.substr(4)});\n                        } else {\n                            var triggerSpec = {trigger: trigger};\n                            var eventFilter = maybeGenerateConditional(elt, tokens, \"event\");\n                            if (eventFilter) {\n                                triggerSpec.eventFilter = eventFilter;\n                            }\n                            while (tokens.length > 0 && tokens[0] !== \",\") {\n                                consumeUntil(tokens, NOT_WHITESPACE)\n                                var token = tokens.shift();\n                                if (token === \"changed\") {\n                                    triggerSpec.changed = true;\n                                } else if (token === \"once\") {\n                                    triggerSpec.once = true;\n                                } else if (token === \"consume\") {\n                                    triggerSpec.consume = true;\n                                } else if (token === \"delay\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.delay = parseInterval(consumeUntil(tokens, WHITESPACE_OR_COMMA));\n                                } else if (token === \"from\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    var from_arg = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                    if (from_arg === \"closest\" || from_arg === \"find\" || from_arg === \"next\" || from_arg === \"previous\") {\n                                        tokens.shift();\n                                        from_arg +=\n                                            \" \" +\n                                            consumeUntil(\n                                                tokens,\n                                                WHITESPACE_OR_COMMA\n                                            );\n                                    }\n                                    triggerSpec.from = from_arg;\n                                } else if (token === \"target\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.target = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                } else if (token === \"throttle\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.throttle = parseInterval(consumeUntil(tokens, WHITESPACE_OR_COMMA));\n                                } else if (token === \"queue\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.queue = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                } else if ((token === \"root\" || token === \"threshold\") && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec[token] = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                } else {\n                                    triggerErrorEvent(elt, \"htmx:syntax:error\", {token:tokens.shift()});\n                                }\n                            }\n                            triggerSpecs.push(triggerSpec);\n                        }\n                    }\n                    if (tokens.length === initialLength) {\n                        triggerErrorEvent(elt, \"htmx:syntax:error\", {token:tokens.shift()});\n                    }\n                    consumeUntil(tokens, NOT_WHITESPACE);\n                } while (tokens[0] === \",\" && tokens.shift())\n            }\n\n            if (triggerSpecs.length > 0) {\n                return triggerSpecs;\n            } else if (matches(elt, 'form')) {\n                return [{trigger: 'submit'}];\n            } else if (matches(elt, 'input[type=\"button\"]')){\n                return [{trigger: 'click'}];\n            } else if (matches(elt, INPUT_SELECTOR)) {\n                return [{trigger: 'change'}];\n            } else {\n                return [{trigger: 'click'}];\n            }\n        }\n\n        function cancelPolling(elt) {\n            getInternalData(elt).cancelled = true;\n        }\n\n        function processPolling(elt, handler, spec) {\n            var nodeData = getInternalData(elt);\n            nodeData.timeout = setTimeout(function () {\n                if (bodyContains(elt) && nodeData.cancelled !== true) {\n                    if (!maybeFilterEvent(spec, makeEvent('hx:poll:trigger', {triggerSpec:spec, target:elt}))) {\n                        handler(elt);\n                    }\n                    processPolling(elt, handler, spec);\n                }\n            }, spec.pollInterval);\n        }\n\n        function isLocalLink(elt) {\n            return location.hostname === elt.hostname &&\n                getRawAttribute(elt,'href') &&\n                getRawAttribute(elt,'href').indexOf(\"#\") !== 0;\n        }\n\n        function boostElement(elt, nodeData, triggerSpecs) {\n            if ((elt.tagName === \"A\" && isLocalLink(elt) && (elt.target === \"\" || elt.target === \"_self\")) || elt.tagName === \"FORM\") {\n                nodeData.boosted = true;\n                var verb, path;\n                if (elt.tagName === \"A\") {\n                    verb = \"get\";\n                    path = elt.href; // DOM property gives the fully resolved href of a relative link\n                } else {\n                    var rawAttribute = getRawAttribute(elt, \"method\");\n                    verb = rawAttribute ? rawAttribute.toLowerCase() : \"get\";\n                    if (verb === \"get\") {\n                    }\n                    path = getRawAttribute(elt, 'action');\n                }\n                triggerSpecs.forEach(function(triggerSpec) {\n                    addEventListener(elt, function(evt) {\n                        issueAjaxRequest(verb, path, elt, evt)\n                    }, nodeData, triggerSpec, true);\n                });\n            }\n        }\n\n        /**\n         *\n         * @param {Event} evt\n         * @param {HTMLElement} elt\n         * @returns\n         */\n        function shouldCancel(evt, elt) {\n            if (evt.type === \"submit\" || evt.type === \"click\") {\n                if (elt.tagName === \"FORM\") {\n                    return true;\n                }\n                if (matches(elt, 'input[type=\"submit\"], button') && closest(elt, 'form') !== null) {\n                    return true;\n                }\n                if (elt.tagName === \"A\" && elt.href &&\n                    (elt.getAttribute('href') === '#' || elt.getAttribute('href').indexOf(\"#\") !== 0)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function ignoreBoostedAnchorCtrlClick(elt, evt) {\n            return getInternalData(elt).boosted && elt.tagName === \"A\" && evt.type === \"click\" && (evt.ctrlKey || evt.metaKey);\n        }\n\n        function maybeFilterEvent(triggerSpec, evt) {\n            var eventFilter = triggerSpec.eventFilter;\n            if(eventFilter){\n                try {\n                    return eventFilter(evt) !== true;\n                } catch(e) {\n                    triggerErrorEvent(getDocument().body, \"htmx:eventFilter:error\", {error: e, source:eventFilter.source});\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function addEventListener(elt, handler, nodeData, triggerSpec, explicitCancel) {\n            var eltsToListenOn;\n            if (triggerSpec.from) {\n                eltsToListenOn = querySelectorAllExt(elt, triggerSpec.from);\n            } else {\n                eltsToListenOn = [elt];\n            }\n            forEach(eltsToListenOn, function (eltToListenOn) {\n                var eventListener = function (evt) {\n                    if (!bodyContains(elt)) {\n                        eltToListenOn.removeEventListener(triggerSpec.trigger, eventListener);\n                        return;\n                    }\n                    if (ignoreBoostedAnchorCtrlClick(elt, evt)) {\n                        return;\n                    }\n                    if (explicitCancel || shouldCancel(evt, elt)) {\n                        evt.preventDefault();\n                    }\n                    if (maybeFilterEvent(triggerSpec, evt)) {\n                        return;\n                    }\n                    var eventData = getInternalData(evt);\n                    eventData.triggerSpec = triggerSpec;\n                    if (eventData.handledFor == null) {\n                        eventData.handledFor = [];\n                    }\n                    var elementData = getInternalData(elt);\n                    if (eventData.handledFor.indexOf(elt) < 0) {\n                        eventData.handledFor.push(elt);\n                        if (triggerSpec.consume) {\n                            evt.stopPropagation();\n                        }\n                        if (triggerSpec.target && evt.target) {\n                            if (!matches(evt.target, triggerSpec.target)) {\n                                return;\n                            }\n                        }\n                        if (triggerSpec.once) {\n                            if (elementData.triggeredOnce) {\n                                return;\n                            } else {\n                                elementData.triggeredOnce = true;\n                            }\n                        }\n                        if (triggerSpec.changed) {\n                            if (elementData.lastValue === elt.value) {\n                                return;\n                            } else {\n                                elementData.lastValue = elt.value;\n                            }\n                        }\n                        if (elementData.delayed) {\n                            clearTimeout(elementData.delayed);\n                        }\n                        if (elementData.throttle) {\n                            return;\n                        }\n\n                        if (triggerSpec.throttle) {\n                            if (!elementData.throttle) {\n                                handler(elt, evt);\n                                elementData.throttle = setTimeout(function () {\n                                    elementData.throttle = null;\n                                }, triggerSpec.throttle);\n                            }\n                        } else if (triggerSpec.delay) {\n                            elementData.delayed = setTimeout(function() { handler(elt, evt) }, triggerSpec.delay);\n                        } else {\n                            handler(elt, evt);\n                        }\n                    }\n                };\n                if (nodeData.listenerInfos == null) {\n                    nodeData.listenerInfos = [];\n                }\n                nodeData.listenerInfos.push({\n                    trigger: triggerSpec.trigger,\n                    listener: eventListener,\n                    on: eltToListenOn\n                })\n                eltToListenOn.addEventListener(triggerSpec.trigger, eventListener);\n            })\n        }\n\n        var windowIsScrolling = false // used by initScrollHandler\n        var scrollHandler = null;\n        function initScrollHandler() {\n            if (!scrollHandler) {\n                scrollHandler = function() {\n                    windowIsScrolling = true\n                };\n                window.addEventListener(\"scroll\", scrollHandler)\n                setInterval(function() {\n                    if (windowIsScrolling) {\n                        windowIsScrolling = false;\n                        forEach(getDocument().querySelectorAll(\"[hx-trigger='revealed'],[data-hx-trigger='revealed']\"), function (elt) {\n                            maybeReveal(elt);\n                        })\n                    }\n                }, 200);\n            }\n        }\n\n        function maybeReveal(elt) {\n            if (!hasAttribute(elt,'data-hx-revealed') && isScrolledIntoView(elt)) {\n                elt.setAttribute('data-hx-revealed', 'true');\n                var nodeData = getInternalData(elt);\n                if (nodeData.initHash) {\n                    triggerEvent(elt, 'revealed');\n                } else {\n                    // if the node isn't initialized, wait for it before triggering the request\n                    elt.addEventListener(\"htmx:afterProcessNode\", function(evt) { triggerEvent(elt, 'revealed') }, {once: true});\n                }\n            }\n        }\n\n        //====================================================================\n        // Web Sockets\n        //====================================================================\n\n        function processWebSocketInfo(elt, nodeData, info) {\n            var values = splitOnWhitespace(info);\n            for (var i = 0; i < values.length; i++) {\n                var value = values[i].split(/:(.+)/);\n                if (value[0] === \"connect\") {\n                    ensureWebSocket(elt, value[1], 0);\n                }\n                if (value[0] === \"send\") {\n                    processWebSocketSend(elt);\n                }\n            }\n        }\n\n        function ensureWebSocket(elt, wssSource, retryCount) {\n            if (!bodyContains(elt)) {\n                return;  // stop ensuring websocket connection when socket bearing element ceases to exist\n            }\n\n            if (wssSource.indexOf(\"/\") == 0) {  // complete absolute paths only\n                var base_part = location.hostname + (location.port ? ':'+location.port: '');\n                if (location.protocol == 'https:') {\n                    wssSource = \"wss://\" + base_part + wssSource;\n                } else if (location.protocol == 'http:') {\n                    wssSource = \"ws://\" + base_part + wssSource;\n                }\n            }\n            var socket = htmx.createWebSocket(wssSource);\n            socket.onerror = function (e) {\n                triggerErrorEvent(elt, \"htmx:wsError\", {error:e, socket:socket});\n                maybeCloseWebSocketSource(elt);\n            };\n\n            socket.onclose = function (e) {\n                if ([1006, 1012, 1013].indexOf(e.code) >= 0) {  // Abnormal Closure/Service Restart/Try Again Later\n                    var delay = getWebSocketReconnectDelay(retryCount);\n                    setTimeout(function() {\n                        ensureWebSocket(elt, wssSource, retryCount+1);  // creates a websocket with a new timeout\n                    }, delay);\n                }\n            };\n            socket.onopen = function (e) {\n                retryCount = 0;\n            }\n\n            getInternalData(elt).webSocket = socket;\n            socket.addEventListener('message', function (event) {\n                if (maybeCloseWebSocketSource(elt)) {\n                    return;\n                }\n\n                var response = event.data;\n                withExtensions(elt, function(extension){\n                    response = extension.transformResponse(response, null, elt);\n                });\n\n                var settleInfo = makeSettleInfo(elt);\n                var fragment = makeFragment(response);\n                var children = toArray(fragment.children);\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n                    oobSwap(getAttributeValue(child, \"hx-swap-oob\") || \"true\", child, settleInfo);\n                }\n\n                settleImmediately(settleInfo.tasks);\n            });\n        }\n\n        function maybeCloseWebSocketSource(elt) {\n            if (!bodyContains(elt)) {\n                getInternalData(elt).webSocket.close();\n                return true;\n            }\n        }\n\n        function processWebSocketSend(elt) {\n            var webSocketSourceElt = getClosestMatch(elt, function (parent) {\n                return getInternalData(parent).webSocket != null;\n            });\n            if (webSocketSourceElt) {\n                elt.addEventListener(getTriggerSpecs(elt)[0].trigger, function (evt) {\n                    var webSocket = getInternalData(webSocketSourceElt).webSocket;\n                    var headers = getHeaders(elt, webSocketSourceElt);\n                    var results = getInputValues(elt, 'post');\n                    var errors = results.errors;\n                    var rawParameters = results.values;\n                    var expressionVars = getExpressionVars(elt);\n                    var allParameters = mergeObjects(rawParameters, expressionVars);\n                    var filteredParameters = filterValues(allParameters, elt);\n                    filteredParameters['HEADERS'] = headers;\n                    if (errors && errors.length > 0) {\n                        triggerEvent(elt, 'htmx:validation:halted', errors);\n                        return;\n                    }\n                    webSocket.send(JSON.stringify(filteredParameters));\n                    if(shouldCancel(evt, elt)){\n                        evt.preventDefault();\n                    }\n                });\n            } else {\n                triggerErrorEvent(elt, \"htmx:noWebSocketSourceError\");\n            }\n        }\n\n        function getWebSocketReconnectDelay(retryCount) {\n            var delay = htmx.config.wsReconnectDelay;\n            if (typeof delay === 'function') {\n                // @ts-ignore\n                return delay(retryCount);\n            }\n            if (delay === 'full-jitter') {\n                var exp = Math.min(retryCount, 6);\n                var maxDelay = 1000 * Math.pow(2, exp);\n                return maxDelay * Math.random();\n            }\n            logError('htmx.config.wsReconnectDelay must either be a function or the string \"full-jitter\"');\n        }\n\n        //====================================================================\n        // Server Sent Events\n        //====================================================================\n\n        function processSSEInfo(elt, nodeData, info) {\n            var values = splitOnWhitespace(info);\n            for (var i = 0; i < values.length; i++) {\n                var value = values[i].split(/:(.+)/);\n                if (value[0] === \"connect\") {\n                    processSSESource(elt, value[1]);\n                }\n\n                if ((value[0] === \"swap\")) {\n                    processSSESwap(elt, value[1])\n                }\n            }\n        }\n\n        function processSSESource(elt, sseSrc) {\n            var source = htmx.createEventSource(sseSrc);\n            source.onerror = function (e) {\n                triggerErrorEvent(elt, \"htmx:sseError\", {error:e, source:source});\n                maybeCloseSSESource(elt);\n            };\n            getInternalData(elt).sseEventSource = source;\n        }\n\n        function processSSESwap(elt, sseEventName) {\n            var sseSourceElt = getClosestMatch(elt, hasEventSource);\n            if (sseSourceElt) {\n                var sseEventSource = getInternalData(sseSourceElt).sseEventSource;\n                var sseListener = function (event) {\n                    if (maybeCloseSSESource(sseSourceElt)) {\n                        sseEventSource.removeEventListener(sseEventName, sseListener);\n                        return;\n                    }\n\n                    ///////////////////////////\n                    // TODO: merge this code with AJAX and WebSockets code in the future.\n\n                    var response = event.data;\n                    withExtensions(elt, function(extension){\n                        response = extension.transformResponse(response, null, elt);\n                    });\n\n                    var swapSpec = getSwapSpecification(elt)\n                    var target = getTarget(elt)\n                    var settleInfo = makeSettleInfo(elt);\n\n                    selectAndSwap(swapSpec.swapStyle, elt, target, response, settleInfo)\n                    settleImmediately(settleInfo.tasks)\n                    triggerEvent(elt, \"htmx:sseMessage\", event)\n                };\n\n                getInternalData(elt).sseListener = sseListener;\n                sseEventSource.addEventListener(sseEventName, sseListener);\n            } else {\n                triggerErrorEvent(elt, \"htmx:noSSESourceError\");\n            }\n        }\n\n        function processSSETrigger(elt, handler, sseEventName) {\n            var sseSourceElt = getClosestMatch(elt, hasEventSource);\n            if (sseSourceElt) {\n                var sseEventSource = getInternalData(sseSourceElt).sseEventSource;\n                var sseListener = function () {\n                    if (!maybeCloseSSESource(sseSourceElt)) {\n                        if (bodyContains(elt)) {\n                            handler(elt);\n                        } else {\n                            sseEventSource.removeEventListener(sseEventName, sseListener);\n                        }\n                    }\n                };\n                getInternalData(elt).sseListener = sseListener;\n                sseEventSource.addEventListener(sseEventName, sseListener);\n            } else {\n                triggerErrorEvent(elt, \"htmx:noSSESourceError\");\n            }\n        }\n\n        function maybeCloseSSESource(elt) {\n            if (!bodyContains(elt)) {\n                getInternalData(elt).sseEventSource.close();\n                return true;\n            }\n        }\n\n        function hasEventSource(node) {\n            return getInternalData(node).sseEventSource != null;\n        }\n\n        //====================================================================\n\n        function loadImmediately(elt, handler, nodeData, delay) {\n            var load = function(){\n                if (!nodeData.loaded) {\n                    nodeData.loaded = true;\n                    handler(elt);\n                }\n            }\n            if (delay) {\n                setTimeout(load, delay);\n            } else {\n                load();\n            }\n        }\n\n        function processVerbs(elt, nodeData, triggerSpecs) {\n            var explicitAction = false;\n            forEach(VERBS, function (verb) {\n                if (hasAttribute(elt,'hx-' + verb)) {\n                    var path = getAttributeValue(elt, 'hx-' + verb);\n                    explicitAction = true;\n                    nodeData.path = path;\n                    nodeData.verb = verb;\n                    triggerSpecs.forEach(function(triggerSpec) {\n                        addTriggerHandler(elt, triggerSpec, nodeData, function (elt, evt) {\n                            issueAjaxRequest(verb, path, elt, evt)\n                        })\n                    });\n                }\n            });\n            return explicitAction;\n        }\n\n        function addTriggerHandler(elt, triggerSpec, nodeData, handler) {\n            if (triggerSpec.sseEvent) {\n                processSSETrigger(elt, handler, triggerSpec.sseEvent);\n            } else if (triggerSpec.trigger === \"revealed\") {\n                initScrollHandler();\n                addEventListener(elt, handler, nodeData, triggerSpec);\n                maybeReveal(elt);\n            } else if (triggerSpec.trigger === \"intersect\") {\n                var observerOptions = {};\n                if (triggerSpec.root) {\n                    observerOptions.root = querySelectorExt(elt, triggerSpec.root)\n                }\n                if (triggerSpec.threshold) {\n                    observerOptions.threshold = parseFloat(triggerSpec.threshold);\n                }\n                var observer = new IntersectionObserver(function (entries) {\n                    for (var i = 0; i < entries.length; i++) {\n                        var entry = entries[i];\n                        if (entry.isIntersecting) {\n                            triggerEvent(elt, \"intersect\");\n                            break;\n                        }\n                    }\n                }, observerOptions);\n                observer.observe(elt);\n                addEventListener(elt, handler, nodeData, triggerSpec);\n            } else if (triggerSpec.trigger === \"load\") {\n                if (!maybeFilterEvent(triggerSpec, makeEvent(\"load\", {elt:elt}))) {\n                                loadImmediately(elt, handler, nodeData, triggerSpec.delay);\n                            }\n            } else if (triggerSpec.pollInterval) {\n                nodeData.polling = true;\n                processPolling(elt, handler, triggerSpec);\n            } else {\n                addEventListener(elt, handler, nodeData, triggerSpec);\n            }\n        }\n\n        function evalScript(script) {\n            if (script.type === \"text/javascript\" || script.type === \"module\" || script.type === \"\") {\n                var newScript = getDocument().createElement(\"script\");\n                forEach(script.attributes, function (attr) {\n                    newScript.setAttribute(attr.name, attr.value);\n                });\n                newScript.textContent = script.textContent;\n                newScript.async = false;\n                if (htmx.config.inlineScriptNonce) {\n                    newScript.nonce = htmx.config.inlineScriptNonce;\n                }\n                var parent = script.parentElement;\n\n                try {\n                    parent.insertBefore(newScript, script);\n                } catch (e) {\n                    logError(e);\n                } finally {\n                    parent.removeChild(script);\n                }\n            }\n        }\n\n        function processScripts(elt) {\n            if (matches(elt, \"script\")) {\n                evalScript(elt);\n            }\n            forEach(findAll(elt, \"script\"), function (script) {\n                evalScript(script);\n            });\n        }\n\n        function hasChanceOfBeingBoosted() {\n            return document.querySelector(\"[hx-boost], [data-hx-boost]\");\n        }\n\n        function findElementsToProcess(elt) {\n            if (elt.querySelectorAll) {\n                var boostedElts = hasChanceOfBeingBoosted() ? \", a, form\" : \"\";\n                var results = elt.querySelectorAll(VERB_SELECTOR + boostedElts + \", [hx-sse], [data-hx-sse], [hx-ws],\" +\n                    \" [data-hx-ws], [hx-ext], [data-hx-ext]\");\n                return results;\n            } else {\n                return [];\n            }\n        }\n\n        function initButtonTracking(form){\n            var maybeSetLastButtonClicked = function(evt){\n                if (matches(evt.target, \"button, input[type='submit']\")) {\n                    var internalData = getInternalData(form);\n                    internalData.lastButtonClicked = evt.target;\n                }\n            };\n\n            // need to handle both click and focus in:\n            //   focusin - in case someone tabs in to a button and hits the space bar\n            //   click - on OSX buttons do not focus on click see https://bugs.webkit.org/show_bug.cgi?id=13724\n\n            form.addEventListener('click', maybeSetLastButtonClicked)\n            form.addEventListener('focusin', maybeSetLastButtonClicked)\n            form.addEventListener('focusout', function(evt){\n                var internalData = getInternalData(form);\n                internalData.lastButtonClicked = null;\n            })\n        }\n\n        function initNode(elt) {\n            if (elt.closest && elt.closest(htmx.config.disableSelector)) {\n                return;\n            }\n            var nodeData = getInternalData(elt);\n            if (nodeData.initHash !== attributeHash(elt)) {\n\n                nodeData.initHash = attributeHash(elt);\n\n                // clean up any previously processed info\n                deInitNode(elt);\n\n                triggerEvent(elt, \"htmx:beforeProcessNode\")\n\n                if (elt.value) {\n                    nodeData.lastValue = elt.value;\n                }\n\n                var triggerSpecs = getTriggerSpecs(elt);\n                var explicitAction = processVerbs(elt, nodeData, triggerSpecs);\n\n                if (!explicitAction && getClosestAttributeValue(elt, \"hx-boost\") === \"true\") {\n                    boostElement(elt, nodeData, triggerSpecs);\n                }\n\n                if (elt.tagName === \"FORM\") {\n                    initButtonTracking(elt);\n                }\n\n                var sseInfo = getAttributeValue(elt, 'hx-sse');\n                if (sseInfo) {\n                    processSSEInfo(elt, nodeData, sseInfo);\n                }\n\n                var wsInfo = getAttributeValue(elt, 'hx-ws');\n                if (wsInfo) {\n                    processWebSocketInfo(elt, nodeData, wsInfo);\n                }\n                triggerEvent(elt, \"htmx:afterProcessNode\");\n            }\n        }\n\n        function processNode(elt) {\n            elt = resolveTarget(elt);\n            initNode(elt);\n            forEach(findElementsToProcess(elt), function(child) { initNode(child) });\n        }\n\n        //====================================================================\n        // Event/Log Support\n        //====================================================================\n\n        function kebabEventName(str) {\n            return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n        }\n\n        function makeEvent(eventName, detail) {\n            var evt;\n            if (window.CustomEvent && typeof window.CustomEvent === 'function') {\n                evt = new CustomEvent(eventName, {bubbles: true, cancelable: true, detail: detail});\n            } else {\n                evt = getDocument().createEvent('CustomEvent');\n                evt.initCustomEvent(eventName, true, true, detail);\n            }\n            return evt;\n        }\n\n        function triggerErrorEvent(elt, eventName, detail) {\n            triggerEvent(elt, eventName, mergeObjects({error:eventName}, detail));\n        }\n\n        function ignoreEventForLogging(eventName) {\n            return eventName === \"htmx:afterProcessNode\"\n        }\n\n        /**\n         * `withExtensions` locates all active extensions for a provided element, then\n         * executes the provided function using each of the active extensions.  It should\n         * be called internally at every extendable execution point in htmx.\n         *\n         * @param {HTMLElement} elt\n         * @param {(extension:import(\"./htmx\").HtmxExtension) => void} toDo\n         * @returns void\n         */\n        function withExtensions(elt, toDo) {\n            forEach(getExtensions(elt), function(extension){\n                try {\n                    toDo(extension);\n                } catch (e) {\n                    logError(e);\n                }\n            });\n        }\n\n        function logError(msg) {\n            if(console.error) {\n                console.error(msg);\n            } else if (console.log) {\n                console.log(\"ERROR: \", msg);\n            }\n        }\n\n        function triggerEvent(elt, eventName, detail) {\n            elt = resolveTarget(elt);\n            if (detail == null) {\n                detail = {};\n            }\n            detail[\"elt\"] = elt;\n            var event = makeEvent(eventName, detail);\n            if (htmx.logger && !ignoreEventForLogging(eventName)) {\n                htmx.logger(elt, eventName, detail);\n            }\n            if (detail.error) {\n                logError(detail.error);\n                triggerEvent(elt, \"htmx:error\", {errorInfo:detail})\n            }\n            var eventResult = elt.dispatchEvent(event);\n            var kebabName = kebabEventName(eventName);\n            if (eventResult && kebabName !== eventName) {\n                var kebabedEvent = makeEvent(kebabName, event.detail);\n                eventResult = eventResult && elt.dispatchEvent(kebabedEvent)\n            }\n            withExtensions(elt, function (extension) {\n                eventResult = eventResult && (extension.onEvent(eventName, event) !== false)\n            });\n            return eventResult;\n        }\n\n        //====================================================================\n        // History Support\n        //====================================================================\n        var currentPathForHistory = location.pathname+location.search;\n\n        function getHistoryElement() {\n            var historyElt = getDocument().querySelector('[hx-history-elt],[data-hx-history-elt]');\n            return historyElt || getDocument().body;\n        }\n\n        function saveToHistoryCache(url, content, title, scroll) {\n            if (!canAccessLocalStorage()) {\n                return;\n            }\n\n            url = normalizePath(url);\n\n            var historyCache = parseJSON(localStorage.getItem(\"htmx-history-cache\")) || [];\n            for (var i = 0; i < historyCache.length; i++) {\n                if (historyCache[i].url === url) {\n                    historyCache.splice(i, 1);\n                    break;\n                }\n            }\n            var newHistoryItem = {url:url, content: content, title:title, scroll:scroll};\n            triggerEvent(getDocument().body, \"htmx:historyItemCreated\", {item:newHistoryItem, cache: historyCache})\n            historyCache.push(newHistoryItem)\n            while (historyCache.length > htmx.config.historyCacheSize) {\n                historyCache.shift();\n            }\n            while(historyCache.length > 0){\n                try {\n                    localStorage.setItem(\"htmx-history-cache\", JSON.stringify(historyCache));\n                    break;\n                } catch (e) {\n                    triggerErrorEvent(getDocument().body, \"htmx:historyCacheError\", {cause:e, cache: historyCache})\n                    historyCache.shift(); // shrink the cache and retry\n                }\n            }\n        }\n\n        function getCachedHistory(url) {\n            if (!canAccessLocalStorage()) {\n                return null;\n            }\n\n            url = normalizePath(url);\n\n            var historyCache = parseJSON(localStorage.getItem(\"htmx-history-cache\")) || [];\n            for (var i = 0; i < historyCache.length; i++) {\n                if (historyCache[i].url === url) {\n                    return historyCache[i];\n                }\n            }\n            return null;\n        }\n\n        function cleanInnerHtmlForHistory(elt) {\n            var className = htmx.config.requestClass;\n            var clone = elt.cloneNode(true);\n            forEach(findAll(clone, \".\" + className), function(child){\n                removeClassFromElement(child, className);\n            });\n            return clone.innerHTML;\n        }\n\n        function saveCurrentPageToHistory() {\n            var elt = getHistoryElement();\n            var path = currentPathForHistory || location.pathname+location.search;\n            triggerEvent(getDocument().body, \"htmx:beforeHistorySave\", {path:path, historyElt:elt});\n            if(htmx.config.historyEnabled) history.replaceState({htmx:true}, getDocument().title, window.location.href);\n            saveToHistoryCache(path, cleanInnerHtmlForHistory(elt), getDocument().title, window.scrollY);\n        }\n\n        function pushUrlIntoHistory(path) {\n            if(htmx.config.historyEnabled)  history.pushState({htmx:true}, \"\", path);\n            currentPathForHistory = path;\n        }\n\n        function replaceUrlInHistory(path) {\n            if(htmx.config.historyEnabled)  history.replaceState({htmx:true}, \"\", path);\n            currentPathForHistory = path;\n        }\n\n        function settleImmediately(tasks) {\n            forEach(tasks, function (task) {\n                task.call();\n            });\n        }\n\n        function loadHistoryFromServer(path) {\n            var request = new XMLHttpRequest();\n            var details = {path: path, xhr:request};\n            triggerEvent(getDocument().body, \"htmx:historyCacheMiss\", details);\n            request.open('GET', path, true);\n            request.setRequestHeader(\"HX-History-Restore-Request\", \"true\");\n            request.onload = function () {\n                if (this.status >= 200 && this.status < 400) {\n                    triggerEvent(getDocument().body, \"htmx:historyCacheMissLoad\", details);\n                    var fragment = makeFragment(this.response);\n                    // @ts-ignore\n                    fragment = fragment.querySelector('[hx-history-elt],[data-hx-history-elt]') || fragment;\n                    var historyElement = getHistoryElement();\n                    var settleInfo = makeSettleInfo(historyElement);\n                    var title = findTitle(this.response);\n                    if (title) {\n                        var titleElt = find(\"title\");\n                        if (titleElt) {\n                            titleElt.innerHTML = title;\n                        } else {\n                            window.document.title = title;\n                        }\n                    }\n                    // @ts-ignore\n                    swapInnerHTML(historyElement, fragment, settleInfo)\n                    settleImmediately(settleInfo.tasks);\n                    currentPathForHistory = path;\n                    triggerEvent(getDocument().body, \"htmx:historyRestore\", {path: path, cacheMiss:true, serverResponse:this.response});\n                } else {\n                    triggerErrorEvent(getDocument().body, \"htmx:historyCacheMissLoadError\", details);\n                }\n            };\n            request.send();\n        }\n\n        function restoreHistory(path) {\n            saveCurrentPageToHistory();\n            path = path || location.pathname+location.search;\n            var cached = getCachedHistory(path);\n            if (cached) {\n                var fragment = makeFragment(cached.content);\n                var historyElement = getHistoryElement();\n                var settleInfo = makeSettleInfo(historyElement);\n                swapInnerHTML(historyElement, fragment, settleInfo)\n                settleImmediately(settleInfo.tasks);\n                document.title = cached.title;\n                window.scrollTo(0, cached.scroll);\n                currentPathForHistory = path;\n                triggerEvent(getDocument().body, \"htmx:historyRestore\", {path:path, item:cached});\n            } else {\n                if (htmx.config.refreshOnHistoryMiss) {\n\n                    // @ts-ignore: optional parameter in reload() function throws error\n                    window.location.reload(true);\n                } else {\n                    loadHistoryFromServer(path);\n                }\n            }\n        }\n\n        function addRequestIndicatorClasses(elt) {\n            var indicators = findAttributeTargets(elt, 'hx-indicator');\n            if (indicators == null) {\n                indicators = [elt];\n            }\n            forEach(indicators, function (ic) {\n                var internalData = getInternalData(ic);\n                internalData.requestCount = (internalData.requestCount || 0) + 1;\n                ic.classList[\"add\"].call(ic.classList, htmx.config.requestClass);\n            });\n            return indicators;\n        }\n\n        function removeRequestIndicatorClasses(indicators) {\n            forEach(indicators, function (ic) {\n                var internalData = getInternalData(ic);\n                internalData.requestCount = (internalData.requestCount || 0) - 1;\n                if (internalData.requestCount === 0) {\n                    ic.classList[\"remove\"].call(ic.classList, htmx.config.requestClass);\n                }\n            });\n        }\n\n        //====================================================================\n        // Input Value Processing\n        //====================================================================\n\n        function haveSeenNode(processed, elt) {\n            for (var i = 0; i < processed.length; i++) {\n                var node = processed[i];\n                if (node.isSameNode(elt)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function shouldInclude(elt) {\n            if(elt.name === \"\" || elt.name == null || elt.disabled) {\n                return false;\n            }\n            // ignore \"submitter\" types (see jQuery src/serialize.js)\n            if (elt.type === \"button\" || elt.type === \"submit\" || elt.tagName === \"image\" || elt.tagName === \"reset\" || elt.tagName === \"file\" ) {\n                return false;\n            }\n            if (elt.type === \"checkbox\" || elt.type === \"radio\" ) {\n                return elt.checked;\n            }\n            return true;\n        }\n\n        function processInputValue(processed, values, errors, elt, validate) {\n            if (elt == null || haveSeenNode(processed, elt)) {\n                return;\n            } else {\n                processed.push(elt);\n            }\n            if (shouldInclude(elt)) {\n                var name = getRawAttribute(elt,\"name\");\n                var value = elt.value;\n                if (elt.multiple) {\n                    value = toArray(elt.querySelectorAll(\"option:checked\")).map(function (e) { return e.value });\n                }\n                // include file inputs\n                if (elt.files) {\n                    value = toArray(elt.files);\n                }\n                // This is a little ugly because both the current value of the named value in the form\n                // and the new value could be arrays, so we have to handle all four cases :/\n                if (name != null && value != null) {\n                    var current = values[name];\n                    if(current) {\n                        if (Array.isArray(current)) {\n                            if (Array.isArray(value)) {\n                                values[name] = current.concat(value);\n                            } else {\n                                current.push(value);\n                            }\n                        } else {\n                            if (Array.isArray(value)) {\n                                values[name] = [current].concat(value);\n                            } else {\n                                values[name] = [current, value];\n                            }\n                        }\n                    } else {\n                        values[name] = value;\n                    }\n                }\n                if (validate) {\n                    validateElement(elt, errors);\n                }\n            }\n            if (matches(elt, 'form')) {\n                var inputs = elt.elements;\n                forEach(inputs, function(input) {\n                    processInputValue(processed, values, errors, input, validate);\n                });\n            }\n        }\n\n        function validateElement(element, errors) {\n            if (element.willValidate) {\n                triggerEvent(element, \"htmx:validation:validate\")\n                if (!element.checkValidity()) {\n                    errors.push({elt: element, message:element.validationMessage, validity:element.validity});\n                    triggerEvent(element, \"htmx:validation:failed\", {message:element.validationMessage, validity:element.validity})\n                }\n            }\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {string} verb\n         */\n        function getInputValues(elt, verb) {\n            var processed = [];\n            var values = {};\n            var formValues = {};\n            var errors = [];\n            var internalData = getInternalData(elt);\n\n            // only validate when form is directly submitted and novalidate or formnovalidate are not set\n            // or if the element has an explicit hx-validate=\"true\" on it\n            var validate = (matches(elt, 'form') && elt.noValidate !== true) || getAttributeValue(elt, \"hx-validate\") === \"true\";\n            if (internalData.lastButtonClicked) {\n                validate = validate && internalData.lastButtonClicked.formNoValidate !== true;\n            }\n\n            // for a non-GET include the closest form\n            if (verb !== 'get') {\n                processInputValue(processed, formValues, errors, closest(elt, 'form'), validate);\n            }\n\n            // include the element itself\n            processInputValue(processed, values, errors, elt, validate);\n\n            // if a button or submit was clicked last, include its value\n            if (internalData.lastButtonClicked) {\n                var name = getRawAttribute(internalData.lastButtonClicked,\"name\");\n                if (name) {\n                    values[name] = internalData.lastButtonClicked.value;\n                }\n            }\n\n            // include any explicit includes\n            var includes = findAttributeTargets(elt, \"hx-include\");\n            forEach(includes, function(node) {\n                processInputValue(processed, values, errors, node, validate);\n                // if a non-form is included, include any input values within it\n                if (!matches(node, 'form')) {\n                    forEach(node.querySelectorAll(INPUT_SELECTOR), function (descendant) {\n                        processInputValue(processed, values, errors, descendant, validate);\n                    })\n                }\n            });\n\n            // form values take precedence, overriding the regular values\n            values = mergeObjects(values, formValues);\n\n            return {errors:errors, values:values};\n        }\n\n        function appendParam(returnStr, name, realValue) {\n            if (returnStr !== \"\") {\n                returnStr += \"&\";\n            }\n            if (String(realValue) === \"[object Object]\") {\n                realValue = JSON.stringify(realValue);\n            }\n            var s = encodeURIComponent(realValue);\n            returnStr += encodeURIComponent(name) + \"=\" + s;\n            return returnStr;\n        }\n\n        function urlEncode(values) {\n            var returnStr = \"\";\n            for (var name in values) {\n                if (values.hasOwnProperty(name)) {\n                    var value = values[name];\n                    if (Array.isArray(value)) {\n                        forEach(value, function(v) {\n                            returnStr = appendParam(returnStr, name, v);\n                        });\n                    } else {\n                        returnStr = appendParam(returnStr, name, value);\n                    }\n                }\n            }\n            return returnStr;\n        }\n\n        function makeFormData(values) {\n            var formData = new FormData();\n            for (var name in values) {\n                if (values.hasOwnProperty(name)) {\n                    var value = values[name];\n                    if (Array.isArray(value)) {\n                        forEach(value, function(v) {\n                            formData.append(name, v);\n                        });\n                    } else {\n                        formData.append(name, value);\n                    }\n                }\n            }\n            return formData;\n        }\n\n        //====================================================================\n        // Ajax\n        //====================================================================\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {HTMLElement} target\n         * @param {string} prompt\n         * @returns {Object} // TODO: Define/Improve HtmxHeaderSpecification\n         */\n        function getHeaders(elt, target, prompt) {\n            var headers = {\n                \"HX-Request\" : \"true\",\n                \"HX-Trigger\" : getRawAttribute(elt, \"id\"),\n                \"HX-Trigger-Name\" : getRawAttribute(elt, \"name\"),\n                \"HX-Target\" : getAttributeValue(target, \"id\"),\n                \"HX-Current-URL\" : getDocument().location.href,\n            }\n            getValuesForElement(elt, \"hx-headers\", false, headers)\n            if (prompt !== undefined) {\n                headers[\"HX-Prompt\"] = prompt;\n            }\n            if (getInternalData(elt).boosted) {\n                headers[\"HX-Boosted\"] = \"true\";\n            }\n            return headers;\n        }\n\n        /**\n         * filterValues takes an object containing form input values\n         * and returns a new object that only contains keys that are\n         * specified by the closest \"hx-params\" attribute\n         * @param {Object} inputValues\n         * @param {HTMLElement} elt\n         * @returns {Object}\n         */\n        function filterValues(inputValues, elt) {\n            var paramsValue = getClosestAttributeValue(elt, \"hx-params\");\n            if (paramsValue) {\n                if (paramsValue === \"none\") {\n                    return {};\n                } else if (paramsValue === \"*\") {\n                    return inputValues;\n                } else if(paramsValue.indexOf(\"not \") === 0) {\n                    forEach(paramsValue.substr(4).split(\",\"), function (name) {\n                        name = name.trim();\n                        delete inputValues[name];\n                    });\n                    return inputValues;\n                } else {\n                    var newValues = {}\n                    forEach(paramsValue.split(\",\"), function (name) {\n                        name = name.trim();\n                        newValues[name] = inputValues[name];\n                    });\n                    return newValues;\n                }\n            } else {\n                return inputValues;\n            }\n        }\n\n        function isAnchorLink(elt) {\n          return getRawAttribute(elt, 'href') && getRawAttribute(elt, 'href').indexOf(\"#\") >=0\n        }\n\n        /**\n         *\n         * @param {HTMLElement} elt\n         * @param {string} swapInfoOverride\n         * @returns {import(\"./htmx\").HtmxSwapSpecification}\n         */\n        function getSwapSpecification(elt, swapInfoOverride) {\n            var swapInfo = swapInfoOverride ? swapInfoOverride : getClosestAttributeValue(elt, \"hx-swap\");\n            var swapSpec = {\n                \"swapStyle\" : getInternalData(elt).boosted ? 'innerHTML' : htmx.config.defaultSwapStyle,\n                \"swapDelay\" : htmx.config.defaultSwapDelay,\n                \"settleDelay\" : htmx.config.defaultSettleDelay\n            }\n            if (getInternalData(elt).boosted && !isAnchorLink(elt)) {\n              swapSpec[\"show\"] = \"top\"\n            }\n            if (swapInfo) {\n                var split = splitOnWhitespace(swapInfo);\n                if (split.length > 0) {\n                    swapSpec[\"swapStyle\"] = split[0];\n                    for (var i = 1; i < split.length; i++) {\n                        var modifier = split[i];\n                        if (modifier.indexOf(\"swap:\") === 0) {\n                            swapSpec[\"swapDelay\"] = parseInterval(modifier.substr(5));\n                        }\n                        if (modifier.indexOf(\"settle:\") === 0) {\n                            swapSpec[\"settleDelay\"] = parseInterval(modifier.substr(7));\n                        }\n                        if (modifier.indexOf(\"scroll:\") === 0) {\n                            var scrollSpec = modifier.substr(7);\n                            var splitSpec = scrollSpec.split(\":\");\n                            var scrollVal = splitSpec.pop();\n                            var selectorVal = splitSpec.length > 0 ? splitSpec.join(\":\") : null;\n                            swapSpec[\"scroll\"] = scrollVal;\n                            swapSpec[\"scrollTarget\"] = selectorVal;\n                        }\n                        if (modifier.indexOf(\"show:\") === 0) {\n                            var showSpec = modifier.substr(5);\n                            var splitSpec = showSpec.split(\":\");\n                            var showVal = splitSpec.pop();\n                            var selectorVal = splitSpec.length > 0 ? splitSpec.join(\":\") : null;\n                            swapSpec[\"show\"] = showVal;\n                            swapSpec[\"showTarget\"] = selectorVal;\n                        }\n                        if (modifier.indexOf(\"focus-scroll:\") === 0) {\n                            var focusScrollVal = modifier.substr(\"focus-scroll:\".length);\n                            swapSpec[\"focusScroll\"] = focusScrollVal == \"true\";\n                        }\n                    }\n                }\n            }\n            return swapSpec;\n        }\n\n        function usesFormData(elt) {\n            return getClosestAttributeValue(elt, \"hx-encoding\") === \"multipart/form-data\" ||\n                (matches(elt, \"form\") && getRawAttribute(elt, 'enctype') === \"multipart/form-data\");\n        }\n\n        function encodeParamsForBody(xhr, elt, filteredParameters) {\n            var encodedParameters = null;\n            withExtensions(elt, function (extension) {\n                if (encodedParameters == null) {\n                    encodedParameters = extension.encodeParameters(xhr, filteredParameters, elt);\n                }\n            });\n            if (encodedParameters != null) {\n                return encodedParameters;\n            } else {\n                if (usesFormData(elt)) {\n                    return makeFormData(filteredParameters);\n                } else {\n                    return urlEncode(filteredParameters);\n                }\n            }\n        }\n\n        /**\n         *\n         * @param {Element} target\n         * @returns {import(\"./htmx\").HtmxSettleInfo}\n         */\n        function makeSettleInfo(target) {\n            return {tasks: [], elts: [target]};\n        }\n\n        function updateScrollState(content, swapSpec) {\n            var first = content[0];\n            var last = content[content.length - 1];\n            if (swapSpec.scroll) {\n                var target = null;\n                if (swapSpec.scrollTarget) {\n                    target = querySelectorExt(first, swapSpec.scrollTarget);\n                }\n                if (swapSpec.scroll === \"top\" && (first || target)) {\n                    target = target || first;\n                    target.scrollTop = 0;\n                }\n                if (swapSpec.scroll === \"bottom\" && (last || target)) {\n                    target = target || last;\n                    target.scrollTop = target.scrollHeight;\n                }\n            }\n            if (swapSpec.show) {\n                var target = null;\n                if (swapSpec.showTarget) {\n                    var targetStr = swapSpec.showTarget;\n                    if (swapSpec.showTarget === \"window\") {\n                        targetStr = \"body\";\n                    }\n                    target = querySelectorExt(first, targetStr);\n                }\n                if (swapSpec.show === \"top\" && (first || target)) {\n                    target = target || first;\n                    target.scrollIntoView({block:'start', behavior: htmx.config.scrollBehavior});\n                }\n                if (swapSpec.show === \"bottom\" && (last || target)) {\n                    target = target || last;\n                    target.scrollIntoView({block:'end', behavior: htmx.config.scrollBehavior});\n                }\n            }\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {string} attr\n         * @param {boolean=} evalAsDefault\n         * @param {Object=} values\n         * @returns {Object}\n         */\n        function getValuesForElement(elt, attr, evalAsDefault, values) {\n            if (values == null) {\n                values = {};\n            }\n            if (elt == null) {\n                return values;\n            }\n            var attributeValue = getAttributeValue(elt, attr);\n            if (attributeValue) {\n                var str = attributeValue.trim();\n                var evaluateValue = evalAsDefault;\n                if (str === \"unset\") {\n                    return null;\n                }\n                if (str.indexOf(\"javascript:\") === 0) {\n                    str = str.substr(11);\n                    evaluateValue = true;\n                } else if (str.indexOf(\"js:\") === 0) {\n                    str = str.substr(3);\n                    evaluateValue = true;\n                }\n                if (str.indexOf('{') !== 0) {\n                    str = \"{\" + str + \"}\";\n                }\n                var varsValues;\n                if (evaluateValue) {\n                    varsValues = maybeEval(elt,function () {return Function(\"return (\" + str + \")\")();}, {});\n                } else {\n                    varsValues = parseJSON(str);\n                }\n                for (var key in varsValues) {\n                    if (varsValues.hasOwnProperty(key)) {\n                        if (values[key] == null) {\n                            values[key] = varsValues[key];\n                        }\n                    }\n                }\n            }\n            return getValuesForElement(parentElt(elt), attr, evalAsDefault, values);\n        }\n\n        function maybeEval(elt, toEval, defaultVal) {\n            if (htmx.config.allowEval) {\n                return toEval();\n            } else {\n                triggerErrorEvent(elt, 'htmx:evalDisallowedError');\n                return defaultVal;\n            }\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {*} expressionVars\n         * @returns\n         */\n        function getHXVarsForElement(elt, expressionVars) {\n            return getValuesForElement(elt, \"hx-vars\", true, expressionVars);\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {*} expressionVars\n         * @returns\n         */\n        function getHXValsForElement(elt, expressionVars) {\n            return getValuesForElement(elt, \"hx-vals\", false, expressionVars);\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @returns {Object}\n         */\n        function getExpressionVars(elt) {\n            return mergeObjects(getHXVarsForElement(elt), getHXValsForElement(elt));\n        }\n\n        function safelySetHeaderValue(xhr, header, headerValue) {\n            if (headerValue !== null) {\n                try {\n                    xhr.setRequestHeader(header, headerValue);\n                } catch (e) {\n                    // On an exception, try to set the header URI encoded instead\n                    xhr.setRequestHeader(header, encodeURIComponent(headerValue));\n                    xhr.setRequestHeader(header + \"-URI-AutoEncoded\", \"true\");\n                }\n            }\n        }\n\n        function getPathFromResponse(xhr) {\n            // NB: IE11 does not support this stuff\n            if (xhr.responseURL && typeof(URL) !== \"undefined\") {\n                try {\n                    var url = new URL(xhr.responseURL);\n                    return url.pathname + url.search;\n                } catch (e) {\n                    triggerErrorEvent(getDocument().body, \"htmx:badResponseUrl\", {url: xhr.responseURL});\n                }\n            }\n        }\n\n        function hasHeader(xhr, regexp) {\n            return xhr.getAllResponseHeaders().match(regexp);\n        }\n\n        function ajaxHelper(verb, path, context) {\n            verb = verb.toLowerCase();\n            if (context) {\n                if (context instanceof Element || isType(context, 'String')) {\n                    return issueAjaxRequest(verb, path, null, null, {\n                        targetOverride: resolveTarget(context),\n                        returnPromise: true\n                    });\n                } else {\n                    return issueAjaxRequest(verb, path, resolveTarget(context.source), context.event,\n                        {\n                            handler : context.handler,\n                            headers : context.headers,\n                            values : context.values,\n                            targetOverride: resolveTarget(context.target),\n                            swapOverride: context.swap,\n                            returnPromise: true\n                        });\n                }\n            } else {\n                return issueAjaxRequest(verb, path, null, null, {\n                        returnPromise: true\n                });\n            }\n        }\n\n        function hierarchyForElt(elt) {\n            var arr = [];\n            while (elt) {\n                arr.push(elt);\n                elt = elt.parentElement;\n            }\n            return arr;\n        }\n\n        function issueAjaxRequest(verb, path, elt, event, etc, confirmed) {\n            var resolve = null;\n            var reject = null;\n            etc = etc != null ? etc : {};\n            if(etc.returnPromise && typeof Promise !== \"undefined\"){\n                var promise = new Promise(function (_resolve, _reject) {\n                    resolve = _resolve;\n                    reject = _reject;\n                });\n            }\n            if(elt == null) {\n                elt = getDocument().body;\n            }\n            var responseHandler = etc.handler || handleAjaxResponse;\n\n            if (!bodyContains(elt)) {\n                return; // do not issue requests for elements removed from the DOM\n            }\n            var target = etc.targetOverride || getTarget(elt);\n            if (target == null || target == DUMMY_ELT) {\n                triggerErrorEvent(elt, 'htmx:targetError', {target: getAttributeValue(elt, \"hx-target\")});\n                return;\n            }\n\n            // allow event-based confirmation w/ a callback\n            if (!confirmed) {\n                var issueRequest = function() {\n                    return issueAjaxRequest(verb, path, elt, event, etc, true);\n                }\n                var confirmDetails = {target: target, elt: elt, path: path, verb: verb, triggeringEvent: event, etc: etc, issueRequest: issueRequest};\n                if (triggerEvent(elt, 'htmx:confirm', confirmDetails) === false) {\n                    return;\n                }\n            }\n\n            var syncElt = elt;\n            var eltData = getInternalData(elt);\n            var syncStrategy = getClosestAttributeValue(elt, \"hx-sync\");\n            var queueStrategy = null;\n            var abortable = false;\n            if (syncStrategy) {\n                var syncStrings = syncStrategy.split(\":\");\n                var selector = syncStrings[0].trim();\n                if (selector === \"this\") {\n                    syncElt = findThisElement(elt, 'hx-sync');\n                } else {\n                    syncElt = querySelectorExt(elt, selector);\n                }\n                // default to the drop strategy\n                syncStrategy = (syncStrings[1] || 'drop').trim();\n                eltData = getInternalData(syncElt);\n                if (syncStrategy === \"drop\" && eltData.xhr && eltData.abortable !== true) {\n                    return;\n                } else if (syncStrategy === \"abort\") {\n                    if (eltData.xhr) {\n                        return;\n                    } else {\n                        abortable = true;\n                    }\n                } else if (syncStrategy === \"replace\") {\n                    triggerEvent(syncElt, 'htmx:abort'); // abort the current request and continue\n                } else if (syncStrategy.indexOf(\"queue\") === 0) {\n                    var queueStrArray = syncStrategy.split(\" \");\n                    queueStrategy = (queueStrArray[1] || \"last\").trim();\n                }\n            }\n\n            if (eltData.xhr) {\n                if (eltData.abortable) {\n                    triggerEvent(syncElt, 'htmx:abort'); // abort the current request and continue\n                } else {\n                    if(queueStrategy == null){\n                        if (event) {\n                            var eventData = getInternalData(event);\n                            if (eventData && eventData.triggerSpec && eventData.triggerSpec.queue) {\n                                queueStrategy = eventData.triggerSpec.queue;\n                            }\n                        }\n                        if (queueStrategy == null) {\n                            queueStrategy = \"last\";\n                        }\n                    }\n                    if (eltData.queuedRequests == null) {\n                        eltData.queuedRequests = [];\n                    }\n                    if (queueStrategy === \"first\" && eltData.queuedRequests.length === 0) {\n                        eltData.queuedRequests.push(function () {\n                            issueAjaxRequest(verb, path, elt, event, etc)\n                        });\n                    } else if (queueStrategy === \"all\") {\n                        eltData.queuedRequests.push(function () {\n                            issueAjaxRequest(verb, path, elt, event, etc)\n                        });\n                    } else if (queueStrategy === \"last\") {\n                        eltData.queuedRequests = []; // dump existing queue\n                        eltData.queuedRequests.push(function () {\n                            issueAjaxRequest(verb, path, elt, event, etc)\n                        });\n                    }\n                    return;\n                }\n            }\n\n            var xhr = new XMLHttpRequest();\n            eltData.xhr = xhr;\n            eltData.abortable = abortable;\n            var endRequestLock = function(){\n                eltData.xhr = null;\n                eltData.abortable = false;\n                if (eltData.queuedRequests != null &&\n                    eltData.queuedRequests.length > 0) {\n                    var queuedRequest = eltData.queuedRequests.shift();\n                    queuedRequest();\n                }\n            }\n            var promptQuestion = getClosestAttributeValue(elt, \"hx-prompt\");\n            if (promptQuestion) {\n                var promptResponse = prompt(promptQuestion);\n                // prompt returns null if cancelled and empty string if accepted with no entry\n                if (promptResponse === null ||\n                    !triggerEvent(elt, 'htmx:prompt', {prompt: promptResponse, target:target})) {\n                    maybeCall(resolve);\n                    endRequestLock();\n                    return promise;\n                }\n            }\n\n            var confirmQuestion = getClosestAttributeValue(elt, \"hx-confirm\");\n            if (confirmQuestion) {\n                if(!confirm(confirmQuestion)) {\n                    maybeCall(resolve);\n                    endRequestLock()\n                    return promise;\n                }\n            }\n\n\n            var headers = getHeaders(elt, target, promptResponse);\n            if (etc.headers) {\n                headers = mergeObjects(headers, etc.headers);\n            }\n            var results = getInputValues(elt, verb);\n            var errors = results.errors;\n            var rawParameters = results.values;\n            if (etc.values) {\n                rawParameters = mergeObjects(rawParameters, etc.values);\n            }\n            var expressionVars = getExpressionVars(elt);\n            var allParameters = mergeObjects(rawParameters, expressionVars);\n            var filteredParameters = filterValues(allParameters, elt);\n\n            if (verb !== 'get' && !usesFormData(elt)) {\n                headers['Content-Type'] = 'application/x-www-form-urlencoded';\n            }\n\n            // behavior of anchors w/ empty href is to use the current URL\n            if (path == null || path === \"\") {\n                path = getDocument().location.href;\n            }\n\n\n            var requestAttrValues = getValuesForElement(elt, 'hx-request');\n\n            var eltIsBoosted = getInternalData(elt).boosted;\n            var requestConfig = {\n                boosted: eltIsBoosted,\n                parameters: filteredParameters,\n                unfilteredParameters: allParameters,\n                headers:headers,\n                target:target,\n                verb:verb,\n                errors:errors,\n                withCredentials: etc.credentials || requestAttrValues.credentials || htmx.config.withCredentials,\n                timeout:  etc.timeout || requestAttrValues.timeout || htmx.config.timeout,\n                path:path,\n                triggeringEvent:event\n            };\n\n            if(!triggerEvent(elt, 'htmx:configRequest', requestConfig)){\n                maybeCall(resolve);\n                endRequestLock();\n                return promise;\n            }\n\n            // copy out in case the object was overwritten\n            path = requestConfig.path;\n            verb = requestConfig.verb;\n            headers = requestConfig.headers;\n            filteredParameters = requestConfig.parameters;\n            errors = requestConfig.errors;\n\n            if(errors && errors.length > 0){\n                triggerEvent(elt, 'htmx:validation:halted', requestConfig)\n                maybeCall(resolve);\n                endRequestLock();\n                return promise;\n            }\n\n            var splitPath = path.split(\"#\");\n            var pathNoAnchor = splitPath[0];\n            var anchor = splitPath[1];\n            var finalPathForGet = null;\n            if (verb === 'get') {\n                finalPathForGet = pathNoAnchor;\n                var values = Object.keys(filteredParameters).length !== 0;\n                if (values) {\n                    if (finalPathForGet.indexOf(\"?\") < 0) {\n                        finalPathForGet += \"?\";\n                    } else {\n                        finalPathForGet += \"&\";\n                    }\n                    finalPathForGet += urlEncode(filteredParameters);\n                    if (anchor) {\n                        finalPathForGet += \"#\" + anchor;\n                    }\n                }\n                xhr.open('GET', finalPathForGet, true);\n            } else {\n                xhr.open(verb.toUpperCase(), path, true);\n            }\n\n            xhr.overrideMimeType(\"text/html\");\n            xhr.withCredentials = requestConfig.withCredentials;\n            xhr.timeout = requestConfig.timeout;\n\n            // request headers\n            if (requestAttrValues.noHeaders) {\n                // ignore all headers\n            } else {\n                for (var header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        var headerValue = headers[header];\n                        safelySetHeaderValue(xhr, header, headerValue);\n                    }\n                }\n            }\n\n            var responseInfo = {\n                xhr: xhr, target: target, requestConfig: requestConfig, etc: etc, boosted: eltIsBoosted,\n                pathInfo: {\n                    requestPath: path,\n                    finalRequestPath: finalPathForGet || path,\n                    anchor: anchor\n                }\n            };\n\n            xhr.onload = function () {\n                try {\n                    var hierarchy = hierarchyForElt(elt);\n                    responseInfo.pathInfo.responsePath = getPathFromResponse(xhr);\n                    responseHandler(elt, responseInfo);\n                    removeRequestIndicatorClasses(indicators);\n                    triggerEvent(elt, 'htmx:afterRequest', responseInfo);\n                    triggerEvent(elt, 'htmx:afterOnLoad', responseInfo);\n                    // if the body no longer contains the element, trigger the even on the closest parent\n                    // remaining in the DOM\n                    if (!bodyContains(elt)) {\n                        var secondaryTriggerElt = null;\n                        while (hierarchy.length > 0 && secondaryTriggerElt == null) {\n                            var parentEltInHierarchy = hierarchy.shift();\n                            if (bodyContains(parentEltInHierarchy)) {\n                                secondaryTriggerElt = parentEltInHierarchy;\n                            }\n                        }\n                        if (secondaryTriggerElt) {\n                            triggerEvent(secondaryTriggerElt, 'htmx:afterRequest', responseInfo);\n                            triggerEvent(secondaryTriggerElt, 'htmx:afterOnLoad', responseInfo);\n                        }\n                    }\n                    maybeCall(resolve);\n                    endRequestLock();\n                } catch (e) {\n                    triggerErrorEvent(elt, 'htmx:onLoadError', mergeObjects({error:e}, responseInfo));\n                    throw e;\n                }\n            }\n            xhr.onerror = function () {\n                removeRequestIndicatorClasses(indicators);\n                triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo);\n                triggerErrorEvent(elt, 'htmx:sendError', responseInfo);\n                maybeCall(reject);\n                endRequestLock();\n            }\n            xhr.onabort = function() {\n                removeRequestIndicatorClasses(indicators);\n                triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo);\n                triggerErrorEvent(elt, 'htmx:sendAbort', responseInfo);\n                maybeCall(reject);\n                endRequestLock();\n            }\n            xhr.ontimeout = function() {\n                removeRequestIndicatorClasses(indicators);\n                triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo);\n                triggerErrorEvent(elt, 'htmx:timeout', responseInfo);\n                maybeCall(reject);\n                endRequestLock();\n            }\n            if(!triggerEvent(elt, 'htmx:beforeRequest', responseInfo)){\n                maybeCall(resolve);\n                endRequestLock()\n                return promise\n            }\n            var indicators = addRequestIndicatorClasses(elt);\n\n            forEach(['loadstart', 'loadend', 'progress', 'abort'], function(eventName) {\n                forEach([xhr, xhr.upload], function (target) {\n                    target.addEventListener(eventName, function(event){\n                        triggerEvent(elt, \"htmx:xhr:\" + eventName, {\n                            lengthComputable:event.lengthComputable,\n                            loaded:event.loaded,\n                            total:event.total\n                        });\n                    })\n                });\n            });\n            triggerEvent(elt, 'htmx:beforeSend', responseInfo);\n            xhr.send(verb === 'get' ? null : encodeParamsForBody(xhr, elt, filteredParameters));\n            return promise;\n        }\n\n        function determineHistoryUpdates(elt, responseInfo) {\n\n            var xhr = responseInfo.xhr;\n\n            //===========================================\n            // First consult response headers\n            //===========================================\n            var pathFromHeaders = null;\n            var typeFromHeaders = null;\n            if (hasHeader(xhr,/HX-Push:/i)) {\n                pathFromHeaders = xhr.getResponseHeader(\"HX-Push\");\n                typeFromHeaders = \"push\";\n            } else if (hasHeader(xhr,/HX-Push-Url:/i)) {\n                pathFromHeaders = xhr.getResponseHeader(\"HX-Push-Url\");\n                typeFromHeaders = \"push\";\n            } else if (hasHeader(xhr,/HX-Replace-Url:/i)) {\n                pathFromHeaders = xhr.getResponseHeader(\"HX-Replace-Url\");\n                typeFromHeaders = \"replace\";\n            }\n\n            // if there was a response header, that has priority\n            if (pathFromHeaders) {\n                if (pathFromHeaders === \"false\") {\n                    return {}\n                } else {\n                    return {\n                        type: typeFromHeaders,\n                        path : pathFromHeaders\n                    }\n                }\n            }\n\n            //===========================================\n            // Next resolve via DOM values\n            //===========================================\n            var requestPath =  responseInfo.pathInfo.finalRequestPath;\n            var responsePath =  responseInfo.pathInfo.responsePath;\n\n            var pushUrl = getClosestAttributeValue(elt, \"hx-push-url\");\n            var replaceUrl = getClosestAttributeValue(elt, \"hx-replace-url\");\n            var elementIsBoosted = getInternalData(elt).boosted;\n\n            var saveType = null;\n            var path = null;\n\n            if (pushUrl) {\n                saveType = \"push\";\n                path = pushUrl;\n            } else if (replaceUrl) {\n                saveType = \"replace\";\n                path = replaceUrl;\n            } else if (elementIsBoosted) {\n                saveType = \"push\";\n                path = responsePath || requestPath; // if there is no response path, go with the original request path\n            }\n\n            if (path) {\n                // false indicates no push, return empty object\n                if (path === \"false\") {\n                    return {};\n                }\n\n                // true indicates we want to follow wherever the server ended up sending us\n                if (path === \"true\") {\n                    path = responsePath || requestPath; // if there is no response path, go with the original request path\n                }\n\n                // restore any anchor associated with the request\n                if (responseInfo.pathInfo.anchor &&\n                    path.indexOf(\"#\") === -1) {\n                    path = path + \"#\" + responseInfo.pathInfo.anchor;\n                }\n\n                return {\n                    type:saveType,\n                    path: path\n                }\n            } else {\n                return {};\n            }\n        }\n\n        function handleAjaxResponse(elt, responseInfo) {\n            var xhr = responseInfo.xhr;\n            var target = responseInfo.target;\n            var etc = responseInfo.etc;\n\n            if (!triggerEvent(elt, 'htmx:beforeOnLoad', responseInfo)) return;\n\n            if (hasHeader(xhr, /HX-Trigger:/i)) {\n                handleTrigger(xhr, \"HX-Trigger\", elt);\n            }\n\n            if (hasHeader(xhr, /HX-Location:/i)) {\n                saveCurrentPageToHistory();\n                var redirectPath = xhr.getResponseHeader(\"HX-Location\");\n                var swapSpec;\n                if (redirectPath.indexOf(\"{\") === 0) {\n                    swapSpec = parseJSON(redirectPath);\n                    // what's the best way to throw an error if the user didn't include this\n                    redirectPath = swapSpec['path'];\n                    delete swapSpec['path'];\n                }\n                ajaxHelper('GET', redirectPath, swapSpec).then(function(){\n                    pushUrlIntoHistory(redirectPath);\n                });\n                return;\n            }\n\n            if (hasHeader(xhr, /HX-Redirect:/i)) {\n                location.href = xhr.getResponseHeader(\"HX-Redirect\");\n                return;\n            }\n\n            if (hasHeader(xhr,/HX-Refresh:/i)) {\n                if (\"true\" === xhr.getResponseHeader(\"HX-Refresh\")) {\n                    location.reload();\n                    return;\n                }\n            }\n\n            if (hasHeader(xhr,/HX-Retarget:/i)) {\n                responseInfo.target = getDocument().querySelector(xhr.getResponseHeader(\"HX-Retarget\"));\n            }\n\n            var historyUpdate = determineHistoryUpdates(elt, responseInfo);\n\n            // by default htmx only swaps on 200 return codes and does not swap\n            // on 204 'No Content'\n            // this can be ovverriden by responding to the htmx:beforeSwap event and\n            // overriding the detail.shouldSwap property\n            var shouldSwap = xhr.status >= 200 && xhr.status < 400 && xhr.status !== 204;\n            var serverResponse = xhr.response;\n            var isError = xhr.status >= 400;\n            var beforeSwapDetails = mergeObjects({shouldSwap: shouldSwap, serverResponse:serverResponse, isError:isError}, responseInfo);\n            if (!triggerEvent(target, 'htmx:beforeSwap', beforeSwapDetails)) return;\n\n            target = beforeSwapDetails.target; // allow re-targeting\n            serverResponse = beforeSwapDetails.serverResponse; // allow updating content\n            isError = beforeSwapDetails.isError; // allow updating error\n\n            responseInfo.failed = isError; // Make failed property available to response events\n            responseInfo.successful = !isError; // Make successful property available to response events\n\n            if (beforeSwapDetails.shouldSwap) {\n                if (xhr.status === 286) {\n                    cancelPolling(elt);\n                }\n\n                withExtensions(elt, function (extension) {\n                    serverResponse = extension.transformResponse(serverResponse, xhr, elt);\n                });\n\n                // Save current page if there will be a history update\n                if (historyUpdate.type) {\n                    saveCurrentPageToHistory();\n                }\n\n                var swapOverride = etc.swapOverride;\n                if (hasHeader(xhr,/HX-Reswap:/i)) {\n                    swapOverride = xhr.getResponseHeader(\"HX-Reswap\");\n                }\n                var swapSpec = getSwapSpecification(elt, swapOverride);\n\n                target.classList.add(htmx.config.swappingClass);\n                var doSwap = function () {\n                    try {\n\n                        var activeElt = document.activeElement;\n                        var selectionInfo = {};\n                        try {\n                            selectionInfo = {\n                                elt: activeElt,\n                                // @ts-ignore\n                                start: activeElt ? activeElt.selectionStart : null,\n                                // @ts-ignore\n                                end: activeElt ? activeElt.selectionEnd : null\n                            };\n                        } catch (e) {\n                            // safari issue - see https://github.com/microsoft/playwright/issues/5894\n                        }\n\n                        var settleInfo = makeSettleInfo(target);\n                        selectAndSwap(swapSpec.swapStyle, target, elt, serverResponse, settleInfo);\n\n                        if (selectionInfo.elt &&\n                            !bodyContains(selectionInfo.elt) &&\n                            selectionInfo.elt.id) {\n                            var newActiveElt = document.getElementById(selectionInfo.elt.id);\n                            var focusOptions = { preventScroll: swapSpec.focusScroll !== undefined ? !swapSpec.focusScroll : !htmx.config.defaultFocusScroll };\n                            if (newActiveElt) {\n                                // @ts-ignore\n                                if (selectionInfo.start && newActiveElt.setSelectionRange) {\n                                    // @ts-ignore\n                                    newActiveElt.setSelectionRange(selectionInfo.start, selectionInfo.end);\n                                }\n                                newActiveElt.focus(focusOptions);\n                            }\n                        }\n\n                        target.classList.remove(htmx.config.swappingClass);\n                        forEach(settleInfo.elts, function (elt) {\n                            if (elt.classList) {\n                                elt.classList.add(htmx.config.settlingClass);\n                            }\n                            triggerEvent(elt, 'htmx:afterSwap', responseInfo);\n                        });\n\n                        if (hasHeader(xhr, /HX-Trigger-After-Swap:/i)) {\n                            var finalElt = elt;\n                            if (!bodyContains(elt)) {\n                                finalElt = getDocument().body;\n                            }\n                            handleTrigger(xhr, \"HX-Trigger-After-Swap\", finalElt);\n                        }\n\n                        var doSettle = function () {\n                            forEach(settleInfo.tasks, function (task) {\n                                task.call();\n                            });\n                            forEach(settleInfo.elts, function (elt) {\n                                if (elt.classList) {\n                                    elt.classList.remove(htmx.config.settlingClass);\n                                }\n                                triggerEvent(elt, 'htmx:afterSettle', responseInfo);\n                            });\n\n                            // if we need to save history, do so\n                            if (historyUpdate.type) {\n                                if (historyUpdate.type === \"push\") {\n                                    pushUrlIntoHistory(historyUpdate.path);\n                                    triggerEvent(getDocument().body, 'htmx:pushedIntoHistory', {path: historyUpdate.path});\n                                } else {\n                                    replaceUrlInHistory(historyUpdate.path);\n                                    triggerEvent(getDocument().body, 'htmx:replacedInHistory', {path: historyUpdate.path});\n                                }\n                            }\n                            if (responseInfo.pathInfo.anchor) {\n                                var anchorTarget = find(\"#\" + responseInfo.pathInfo.anchor);\n                                if(anchorTarget) {\n                                    anchorTarget.scrollIntoView({block:'start', behavior: \"auto\"});\n                                }\n                            }\n\n                            if(settleInfo.title) {\n                                var titleElt = find(\"title\");\n                                if(titleElt) {\n                                    titleElt.innerHTML = settleInfo.title;\n                                } else {\n                                    window.document.title = settleInfo.title;\n                                }\n                            }\n\n                            updateScrollState(settleInfo.elts, swapSpec);\n\n                            if (hasHeader(xhr, /HX-Trigger-After-Settle:/i)) {\n                                var finalElt = elt;\n                                if (!bodyContains(elt)) {\n                                    finalElt = getDocument().body;\n                                }\n                                handleTrigger(xhr, \"HX-Trigger-After-Settle\", finalElt);\n                            }\n                        }\n\n                        if (swapSpec.settleDelay > 0) {\n                            setTimeout(doSettle, swapSpec.settleDelay)\n                        } else {\n                            doSettle();\n                        }\n                    } catch (e) {\n                        triggerErrorEvent(elt, 'htmx:swapError', responseInfo);\n                        throw e;\n                    }\n                };\n\n                if (swapSpec.swapDelay > 0) {\n                    setTimeout(doSwap, swapSpec.swapDelay)\n                } else {\n                    doSwap();\n                }\n            }\n            if (isError) {\n                triggerErrorEvent(elt, 'htmx:responseError', mergeObjects({error: \"Response Status Error Code \" + xhr.status + \" from \" + responseInfo.pathInfo.requestPath}, responseInfo));\n            }\n        }\n\n        //====================================================================\n        // Extensions API\n        //====================================================================\n\n        /** @type {Object<string, import(\"./htmx\").HtmxExtension>} */\n        var extensions = {};\n\n        /**\n         * extensionBase defines the default functions for all extensions.\n         * @returns {import(\"./htmx\").HtmxExtension}\n         */\n        function extensionBase() {\n            return {\n                init: function(api) {return null;},\n                onEvent : function(name, evt) {return true;},\n                transformResponse : function(text, xhr, elt) {return text;},\n                isInlineSwap : function(swapStyle) {return false;},\n                handleSwap : function(swapStyle, target, fragment, settleInfo) {return false;},\n                encodeParameters : function(xhr, parameters, elt) {return null;}\n            }\n        }\n\n        /**\n         * defineExtension initializes the extension and adds it to the htmx registry\n         *\n         * @param {string} name\n         * @param {import(\"./htmx\").HtmxExtension} extension\n         */\n        function defineExtension(name, extension) {\n            if(extension.init) {\n                extension.init(internalAPI)\n            }\n            extensions[name] = mergeObjects(extensionBase(), extension);\n        }\n\n        /**\n         * removeExtension removes an extension from the htmx registry\n         *\n         * @param {string} name\n         */\n        function removeExtension(name) {\n            delete extensions[name];\n        }\n\n        /**\n         * getExtensions searches up the DOM tree to return all extensions that can be applied to a given element\n         *\n         * @param {HTMLElement} elt\n         * @param {import(\"./htmx\").HtmxExtension[]=} extensionsToReturn\n         * @param {import(\"./htmx\").HtmxExtension[]=} extensionsToIgnore\n         */\n         function getExtensions(elt, extensionsToReturn, extensionsToIgnore) {\n\n            if (elt == undefined) {\n                return extensionsToReturn;\n            }\n            if (extensionsToReturn == undefined) {\n                extensionsToReturn = [];\n            }\n            if (extensionsToIgnore == undefined) {\n                extensionsToIgnore = [];\n            }\n            var extensionsForElement = getAttributeValue(elt, \"hx-ext\");\n            if (extensionsForElement) {\n                forEach(extensionsForElement.split(\",\"), function(extensionName){\n                    extensionName = extensionName.replace(/ /g, '');\n                    if (extensionName.slice(0, 7) == \"ignore:\") {\n                        extensionsToIgnore.push(extensionName.slice(7));\n                        return;\n                    }\n                    if (extensionsToIgnore.indexOf(extensionName) < 0) {\n                        var extension = extensions[extensionName];\n                        if (extension && extensionsToReturn.indexOf(extension) < 0) {\n                            extensionsToReturn.push(extension);\n                        }\n                    }\n                });\n            }\n            return getExtensions(parentElt(elt), extensionsToReturn, extensionsToIgnore);\n        }\n\n        //====================================================================\n        // Initialization\n        //====================================================================\n\n        function ready(fn) {\n            if (getDocument().readyState !== 'loading') {\n                fn();\n            } else {\n                getDocument().addEventListener('DOMContentLoaded', fn);\n            }\n        }\n\n        function insertIndicatorStyles() {\n            if (htmx.config.includeIndicatorStyles !== false) {\n                getDocument().head.insertAdjacentHTML(\"beforeend\",\n                    \"<style>\\\n                      .\" + htmx.config.indicatorClass + \"{opacity:0;transition: opacity 200ms ease-in;}\\\n                      .\" + htmx.config.requestClass + \" .\" + htmx.config.indicatorClass + \"{opacity:1}\\\n                      .\" + htmx.config.requestClass + \".\" + htmx.config.indicatorClass + \"{opacity:1}\\\n                    </style>\");\n            }\n        }\n\n        function getMetaConfig() {\n            var element = getDocument().querySelector('meta[name=\"htmx-config\"]');\n            if (element) {\n                // @ts-ignore\n                return parseJSON(element.content);\n            } else {\n                return null;\n            }\n        }\n\n        function mergeMetaConfig() {\n            var metaConfig = getMetaConfig();\n            if (metaConfig) {\n                htmx.config = mergeObjects(htmx.config , metaConfig)\n            }\n        }\n\n        // initialize the document\n        ready(function () {\n            mergeMetaConfig();\n            insertIndicatorStyles();\n            var body = getDocument().body;\n            processNode(body);\n            var restoredElts = getDocument().querySelectorAll(\n                \"[hx-trigger='restored'],[data-hx-trigger='restored']\"\n            );\n            body.addEventListener(\"htmx:abort\", function (evt) {\n                var target = evt.target;\n                var internalData = getInternalData(target);\n                if (internalData && internalData.xhr) {\n                    internalData.xhr.abort();\n                }\n            });\n            window.onpopstate = function (event) {\n                if (event.state && event.state.htmx) {\n                    restoreHistory();\n                    forEach(restoredElts, function(elt){\n                        triggerEvent(elt, 'htmx:restored', {\n                            'document': getDocument(),\n                            'triggerEvent': triggerEvent\n                        });\n                    });\n                }\n            };\n            setTimeout(function () {\n                triggerEvent(body, 'htmx:load', {}); // give ready handlers a chance to load up before firing this event\n            }, 0);\n        })\n\n        htmx.defineExtension(\"fi-svghack\", {\n            onEvent: function(name, evt) {\n                if (name == 'htmx:confirm' && evt.detail.elt.tagName == 'a' && evt.detail.triggeringEvent.type == 'click') {\n                    evt.detail.triggeringEvent.preventDefault()\n                }\n            }\n        })\n        return htmx;\n    }\n","// =======================================================================================================\n// This file contains the functionality to enable the dragging and dropping of the timeline marker to work\n// =======================================================================================================\nlet currentX\nlet currentTick\nlet root\nwindow.addEventListener(\"dragover\", e => {\n    currentX = e.clientX\n    let closestTick\n    for (const el of root.querySelectorAll('.tl a')) {\n      const rect = el.getBoundingClientRect()\n      if (rect.left <= currentX && currentX <= rect.right) {\n          closestTick = el\n      }\n    }\n    currentTick = closestTick\n})\nexport const enableMarkerDnD = document => {\n    root = document\n    const now = Date.now()\n    const marker = document.querySelector('.active-year-marker');\n    const dropzones = document.querySelectorAll('.tl a');\n    const dzXCoords = Array.from(dropzones).map((dropzone) => dropzone.getBoundingClientRect().x);\n\n    // This finds the closest tick to where the cursor is during the drag.\n    const getClosestDropzoneX = (goal) => {\n      return dzXCoords.reduce((prev, curr) => {\n        return (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\n      });\n    };\n\n    // Marker Listeners\n    marker.addEventListener('dragstart', dragStart);\n    marker.addEventListener('dragend', dragEnd);\n    marker.addEventListener('drag', dragHandler);\n    marker.addEventListener('mousedown', mouseDown);\n    marker.addEventListener('mouseup', mouseUp);\n    marker.addEventListener('mousemove', mouseMove);\n    // Loop through dropzones and call drag events\n    Array.from(dropzones).forEach((dropzone) => {\n      \n      dropzone.addEventListener('dragover', dragOver);\n      dropzone.addEventListener('dragenter', dragEnter);\n      dropzone.addEventListener('dragleave', dragLeave);\n      dropzone.addEventListener('drop', dragDrop);\n    });\n\n    let initialX;\n    let xOffset = 0;\n    let markerWidth = (marker.getBoundingClientRect().width / 2);\n    let currentTickX;\n\n    // Make invisible drag feedback image\n    const dragImgEl = window.document.createElement('span');\n    dragImgEl.setAttribute('style', 'position: absolute; display: block; top: 0; left: 0; width: 0; height: 0;' );\n    (document.body ? document.body : document).appendChild(dragImgEl);\n\n    // ==============================================\n    // Necessary to prevent mirror image from showing\n    // ==============================================\n    function mouseDown(e) {}\n\n    function mouseUp(e) {}\n\n    function mouseMove(e) {\n      e.preventDefault();\n    }\n\n    // ==============================================\n    // Drag Functions\n    // ==============================================\n    function dragStart(e) {\n      e.dataTransfer.setDragImage(dragImgEl, 0, 0);\n      initialX = e.clientX; // where mouse was when drag start\n\n      setTimeout(() => { this.className += ' no-point'; }, 0);\n    }\n\n    function dragHandler(e) {\n      let prevX;\n      e.preventDefault();\n      if (currentX <= 0) {\n        e.target.style.transform = `translateX(${initialX - markerWidth}px)`;\n      }\n      else {\n        e.target.style.transform = `translateX(${currentX - markerWidth}px)`;\n      }\n      prevX = currentX;\n    }\n\n    function dragEnd(e) {\n      e.preventDefault();\n      this.classList.remove('no-point');\n      let destination = getClosestDropzoneX(currentX); // not used?\n      if (currentX <= 0) {\n        e.target.style.transform = `translateX(${currentTickX}px)`;\n      }\n      else {\n        e.target.style.transform = `translateX(${currentX - markerWidth}px)`;\n      }\n\n      currentTick.dispatchEvent(new Event(\"click\"))\n    }\n\n    function dragOver(e) {\n      e.preventDefault();\n      currentX = e.clientX;\n      xOffset = currentX;\n    }\n\n    function dragEnter(e) {\n      e.preventDefault();\n    }\n\n    function dragLeave(e) {\n      e.preventDefault();\n    }\n\n    function dragDrop(e) {\n      e.preventDefault();\n    }\n}\n","import HTMX from \"./htmx.js\"\nimport {installButtons, markerDnD} from \"./lib.js\"\n\nclass FortepanViewer extends HTMLElement {\n    constructor() {\n        super()\n        const shadow = this.attachShadow({mode: \"open\"})\n    }\n    connectedCallback() {\n        const constraint = this.getAttribute(\"constraint\")\n        const host = this.getAttribute(\"src\") || \"https://fortepan.us\"\n        const template = document.createElement(\"template\")\n        const body = document.querySelector(\"body\")\n        const f = document.createElement(\"style\")\n        f.innerHTML = `\n/* cyrillic-ext */\n@font-face {\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 300;\n  src: url(https://fonts.gstatic.com/s/montserrat/v18/JTURjIg1_i6t8kCHKm45_cJD3gTD_u50.woff2) format('woff2');\n  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n}\n/* cyrillic */\n@font-face {\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 300;\n  src: url(https://fonts.gstatic.com/s/montserrat/v18/JTURjIg1_i6t8kCHKm45_cJD3g3D_u50.woff2) format('woff2');\n  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n/* vietnamese */\n@font-face {\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 300;\n  src: url(https://fonts.gstatic.com/s/montserrat/v18/JTURjIg1_i6t8kCHKm45_cJD3gbD_u50.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n/* latin-ext */\n@font-face {\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 300;\n  src: url(https://fonts.gstatic.com/s/montserrat/v18/JTURjIg1_i6t8kCHKm45_cJD3gfD_u50.woff2) format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n/* latin */\n@font-face {\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 300;\n  src: url(https://fonts.gstatic.com/s/montserrat/v18/JTURjIg1_i6t8kCHKm45_cJD3gnD_g.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n/* cyrillic-ext */\n@font-face {\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 400;\n  src: url(https://fonts.gstatic.com/s/montserrat/v18/JTUSjIg1_i6t8kCHKm459WRhyzbi.woff2) format('woff2');\n  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n}\n/* cyrillic */\n@font-face {\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 400;\n  src: url(https://fonts.gstatic.com/s/montserrat/v18/JTUSjIg1_i6t8kCHKm459W1hyzbi.woff2) format('woff2');\n  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n/* vietnamese */\n@font-face {\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 400;\n  src: url(https://fonts.gstatic.com/s/montserrat/v18/JTUSjIg1_i6t8kCHKm459WZhyzbi.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n/* latin-ext */\n@font-face {\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 400;\n  src: url(https://fonts.gstatic.com/s/montserrat/v18/JTUSjIg1_i6t8kCHKm459Wdhyzbi.woff2) format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n/* latin */\n@font-face {\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 400;\n  src: url(https://fonts.gstatic.com/s/montserrat/v18/JTUSjIg1_i6t8kCHKm459Wlhyw.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n/* cyrillic-ext */\n@font-face {\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  src: url(https://fonts.gstatic.com/s/montserrat/v18/JTURjIg1_i6t8kCHKm45_ZpC3gTD_u50.woff2) format('woff2');\n  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n}\n/* cyrillic */\n@font-face {\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  src: url(https://fonts.gstatic.com/s/montserrat/v18/JTURjIg1_i6t8kCHKm45_ZpC3g3D_u50.woff2) format('woff2');\n  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n}\n/* vietnamese */\n@font-face {\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  src: url(https://fonts.gstatic.com/s/montserrat/v18/JTURjIg1_i6t8kCHKm45_ZpC3gbD_u50.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n/* latin-ext */\n@font-face {\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  src: url(https://fonts.gstatic.com/s/montserrat/v18/JTURjIg1_i6t8kCHKm45_ZpC3gfD_u50.woff2) format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n/* latin */\n@font-face {\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  src: url(https://fonts.gstatic.com/s/montserrat/v18/JTURjIg1_i6t8kCHKm45_ZpC3gnD_g.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n`\n        body.appendChild(f)\n        const mode = 'cors'\n        const headers = new Headers([['Embedded', '1'], [\"Constraint\", constraint]])\n        const req = new Request(host, {mode, headers})\n        fetch(req)\n            .then(response => response.text())\n            .then(response => {\n                this.shadowRoot.innerHTML = response\n                this.htmx = HTMX(this.shadowRoot)\n                this.htmx.process(this.shadowRoot.querySelector(\"#kfroot\"))\n                //this.htmx.logAll()\n                this.htmx.onLoad(toggleMetadata(this.shadowRoot))\n                toggleMetadata(this.shadowRoot)(this.shadowRoot.querySelector(\"#app\"))\n                //this.htmx.onLoad(markerDnD(this.shadowRoot))\n                //window.setTimeout(() => {\n                //    markerDnD(this.shadowRoot)(this.shadowRoot.querySelector('#active-year-marker'))\n                //}, 500)\n            })\n    }\n}\ncustomElements.define(\"fortepan-viewer\", FortepanViewer)\n"],"names":["HTMX","document2","htmx","onLoad","onLoadHelper","process","processNode","on","addEventListenerImpl","off","removeEventListenerImpl","trigger","triggerEvent","ajax","ajaxHelper","find","findAll","closest","values","elt","type","getInputValues","remove","removeElement","addClass","addClassToElement","removeClass","removeClassFromElement","toggleClass","toggleClassOnElement","takeClass","takeClassForElement","defineExtension","removeExtension","logAll","logger","config","historyEnabled","historyCacheSize","refreshOnHistoryMiss","defaultSwapStyle","defaultSwapDelay","defaultSettleDelay","includeIndicatorStyles","indicatorClass","requestClass","addedClass","settlingClass","swappingClass","allowEval","inlineScriptNonce","attributesToSettle","withCredentials","timeout","wsReconnectDelay","disableSelector","useTemplateFragments","scrollBehavior","defaultFocusScroll","parseInterval","_","internalEval","createEventSource","url","EventSource","createWebSocket","WebSocket","version","internalAPI","addTriggerHandler","bodyContains","canAccessLocalStorage","filterValues","hasAttribute","getAttributeValue","getClosestMatch","getExpressionVars","getHeaders","getInternalData","getSwapSpecification","getTriggerSpecs","getTarget","makeFragment","mergeObjects","makeSettleInfo","oobSwap","selectAndSwap","settleImmediately","shouldCancel","triggerErrorEvent","withExtensions","VERBS","VERB_SELECTOR","map","verb","join","str","undefined","slice","parseFloat","getRawAttribute","name","getAttribute","qualifiedName","parentElt","parentElement","getDocument","document","condition","getAttributeValueWithDisinheritance","initialElement","ancestor","attributeName","attributeValue","disinherit","split","indexOf","getClosestAttributeValue","closestAttr","e","matches","selector","matchesFunction","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","call","getStartTag","match","exec","toLowerCase","parseHTML","resp","depth","responseNode","DOMParser","parseFromString","body","firstChild","createDocumentFragment","querySelector","content","maybeCall","func","isType","o","Object","prototype","toString","isFunction","isRawObject","dataProp","data","toArray","arr","returnArr","i","length","push","forEach","isScrolledIntoView","el","rect","getBoundingClientRect","elemTop","top","elemBottom","bottom","window","innerHeight","getRootNode","ShadowRoot","contains","host","splitOnWhitespace","trim","obj1","obj2","key","hasOwnProperty","parseJSON","jString","JSON","parse","error","logError","test","localStorage","setItem","removeItem","normalizePath","path","URL","pathname","search","replace","maybeEval","eval","callback","evt","detail","event","console","log","eltOrSelector","querySelectorAll","delay","resolveTarget","setTimeout","removeChild","clazz","classList","add","removeAttribute","toggle","children","child","querySelectorAllExt","substr","scanForwardQuery","scanBackwardsQuery","start","results","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_FOLLOWING","querySelectorExt","arg2","processEventArgs","arg1","arg3","target","listener","ready","eventArgs","addEventListener","removeEventListener","DUMMY_ELT","createElement","findAttributeTargets","attrName","attrTarget","findThisElement","result","attribute","targetStr","boosted","shouldSettleAttribute","cloneAttributes","mergeTo","mergeFrom","attributes","attr","setAttribute","value","isInlineSwap","swapStyle","extensions","getExtensions","extension","oobValue","oobElement","settleInfo","id","targets","fragment","oobElementClone","cloneNode","appendChild","beforeSwapDetails","shouldSwap","swap","elts","parentNode","handleOutOfBandSwaps","oobSelects","oobSelectValues","oobSelectValue","substring","handlePreservedElements","preservedElt","oldElt","getElementById","replaceChild","handleAttributes","newNode","oldNode","tagName","newAttributes","tasks","makeAjaxLoadTask","processScripts","processFocus","autofocus","autoFocusedElt","focus","insertNodesBefore","insertBefore","childNodes","nodeType","TEXT_NODE","COMMENT_NODE","stringHash","string","hash","char","charCodeAt","attributeHash","deInitNode","element","internalData","webSocket","close","sseEventSource","listenerInfos","info","cleanUpElement","swapOuterHTML","swapInnerHTML","newElt","eltBeforeNewContent","previousSibling","nextSibling","replacedWith","ELEMENT_NODE","nextElementSibling","swapAfterBegin","swapBeforeBegin","swapBeforeEnd","swapAfterEnd","swapDelete","maybeSelectFromResponse","newFragment","node","ext","newElements","handleSwap","j","findTitle","responseText","title","handleTrigger","xhr","header","triggerBody","getResponseHeader","triggers","eventName","WHITESPACE_OR_COMMA","SYMBOL_START","SYMBOL_CONT","STRINGISH_START","NOT_WHITESPACE","tokenizeString","tokens","position","charAt","startPosition","startChar","symbol","isPossibleRelativeReference","token","last","paramName","maybeGenerateConditional","shift","bracketCount","conditionalSource","conditionFunction","Function","source","consumeUntil","INPUT_SELECTOR","explicitTrigger","triggerSpecs","initialLength","every","pollInterval","eventFilter","sseEvent","triggerSpec","changed","once","consume","from_arg","from","throttle","queue","cancelPolling","cancelled","processPolling","handler","spec","nodeData","maybeFilterEvent","makeEvent","isLocalLink","location","hostname","boostElement","href","rawAttribute","issueAjaxRequest","ignoreBoostedAnchorCtrlClick","ctrlKey","metaKey","explicitCancel","eltToListenOn","eventListener","preventDefault","eventData","handledFor","elementData","stopPropagation","triggeredOnce","lastValue","delayed","clearTimeout","windowIsScrolling","scrollHandler","initScrollHandler","setInterval","maybeReveal","initHash","processWebSocketInfo","ensureWebSocket","processWebSocketSend","wssSource","retryCount","base_part","port","protocol","socket","onerror","maybeCloseWebSocketSource","onclose","code","getWebSocketReconnectDelay","onopen","response","transformResponse","webSocketSourceElt","parent","headers","errors","filteredParameters","send","stringify","exp","Math","min","pow","random","processSSEInfo","processSSESource","processSSESwap","sseSrc","maybeCloseSSESource","sseEventName","sseSourceElt","hasEventSource","sseListener","swapSpec","processSSETrigger","loadImmediately","load","loaded","processVerbs","explicitAction","observerOptions","root","threshold","IntersectionObserver","entries","isIntersecting","observe","polling","evalScript","script","newScript","textContent","async","nonce","hasChanceOfBeingBoosted","findElementsToProcess","boostedElts","initButtonTracking","form","maybeSetLastButtonClicked","lastButtonClicked","initNode","sseInfo","wsInfo","kebabEventName","CustomEvent","bubbles","cancelable","createEvent","initCustomEvent","ignoreEventForLogging","toDo","msg","errorInfo","eventResult","dispatchEvent","kebabName","kebabedEvent","onEvent","currentPathForHistory","getHistoryElement","saveToHistoryCache","scroll","historyCache","getItem","splice","newHistoryItem","item","cache","cause","getCachedHistory","cleanInnerHtmlForHistory","className","clone","innerHTML","saveCurrentPageToHistory","historyElt","history","replaceState","scrollY","pushUrlIntoHistory","pushState","replaceUrlInHistory","task","loadHistoryFromServer","request","XMLHttpRequest","details","open","setRequestHeader","onload","this","status","historyElement","titleElt","cacheMiss","serverResponse","restoreHistory","cached","scrollTo","reload","addRequestIndicatorClasses","indicators","ic","requestCount","removeRequestIndicatorClasses","haveSeenNode","processed","isSameNode","shouldInclude","disabled","checked","processInputValue","validate","multiple","files","current","Array","isArray","concat","validateElement","elements","input","willValidate","checkValidity","message","validationMessage","validity","formValues","noValidate","formNoValidate","descendant","appendParam","returnStr","realValue","String","s","encodeURIComponent","urlEncode","v","makeFormData","formData","FormData","append","prompt","getValuesForElement","inputValues","paramsValue","newValues","isAnchorLink","swapInfoOverride","swapInfo","swapDelay","settleDelay","modifier","scrollVal","splitSpec","pop","selectorVal","showVal","focusScrollVal","usesFormData","encodeParamsForBody","encodedParameters","encodeParameters","updateScrollState","first","scrollTarget","scrollTop","scrollHeight","show","showTarget","scrollIntoView","block","behavior","evalAsDefault","varsValues","evaluateValue","toEval","defaultVal","getHXVarsForElement","expressionVars","getHXValsForElement","safelySetHeaderValue","headerValue","getPathFromResponse","responseURL","hasHeader","regexp","getAllResponseHeaders","context","Element","targetOverride","returnPromise","swapOverride","hierarchyForElt","etc","confirmed","resolve","reject","Promise","promise","_resolve","_reject","responseHandler","handleAjaxResponse","triggeringEvent","issueRequest","syncElt","eltData","syncStrategy","queueStrategy","abortable","syncStrings","queuedRequests","endRequestLock","queuedRequest","promptQuestion","promptResponse","confirmQuestion","confirm","rawParameters","allParameters","requestAttrValues","eltIsBoosted","requestConfig","parameters","unfilteredParameters","credentials","splitPath","pathNoAnchor","anchor","finalPathForGet","keys","toUpperCase","overrideMimeType","noHeaders","responseInfo","pathInfo","requestPath","finalRequestPath","hierarchy","responsePath","secondaryTriggerElt","parentEltInHierarchy","onabort","ontimeout","upload","lengthComputable","total","determineHistoryUpdates","pathFromHeaders","typeFromHeaders","pushUrl","replaceUrl","elementIsBoosted","saveType","redirectPath","then","historyUpdate","isError","failed","successful","doSwap","activeElt","activeElement","selectionInfo","selectionStart","end","selectionEnd","newActiveElt","focusOptions","preventScroll","focusScroll","setSelectionRange","finalElt","doSettle","anchorTarget","extensionBase","init","api","text","extensionsToReturn","extensionsToIgnore","extensionsForElement","extensionName","fn","readyState","insertIndicatorStyles","head","insertAdjacentHTML","getMetaConfig","mergeMetaConfig","metaConfig","restoredElts","abort","onpopstate","state","currentX","clientX","left","right","FortepanViewer","HTMLElement","constructor","super","attachShadow","mode","connectedCallback","constraint","f","Headers","req","Request","fetch","shadowRoot","toggleMetadata","customElements","define"],"mappings":"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"}