# Generated by Django 3.2.13 on 2022-06-27 20:37

import fortepan_us.kronofoto.models
import fortepan_us.kronofoto.storage
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('kronofoto', '0029_photo_location_from_google'),
    ]

    operations = [
        migrations.CreateModel(
            name='PhotoSphere',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=512)),
                ('image', models.ImageField(null=True, storage=fortepan_us.kronofoto.storage.OverwriteStorage(), upload_to=fortepan_us.kronofoto.models.get_photosphere_path)),
                ('heading', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=-180), django.core.validators.MaxValueValidator(limit_value=180)])),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='PhotoSpherePair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('azimuth', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=-180), django.core.validators.MaxValueValidator(limit_value=180)])),
                ('inclination', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=-90), django.core.validators.MaxValueValidator(limit_value=90)])),
                ('distance', models.FloatField(default=500, validators=[django.core.validators.MinValueValidator(limit_value=1), django.core.validators.MaxValueValidator(limit_value=2000)])),
                ('photo', models.ForeignKey(help_text='Select a photo and photo sphere then click Save and Continue Editing to use the interactive tool', on_delete=django.db.models.deletion.CASCADE, to='kronofoto.photo')),
                ('photosphere', models.ForeignKey(help_text='Select a photo and photo sphere then click Save and Continue Editing to use the interactive tool', on_delete=django.db.models.deletion.CASCADE, to='kronofoto.photosphere')),
            ],
        ),
        migrations.AddField(
            model_name='photosphere',
            name='photos',
            field=models.ManyToManyField(through='archive.PhotoSpherePair', to='archive.Photo'),
        ),
    ]
